{"version":3,"sources":["content/WorldMap.js","content/Cards.js","content/Timeline.js","content/Home.js","emotions/TimelineEmotions.js","emotions/TimelinePolarity.js","emotions/SentimentAnalysis.js","symptoms/MexicoCityMap.js","symptoms/Timeline.js","symptoms/SymptomsMonitor.js","about/About.js","Footer.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["WorldMap","props","state","wMap","hMap","wSvg","hSvg","error","isLoaded","data","time","window","addEventListener","this","resize","bind","fetch","then","res","json","result","setState","features","innerWidth","className","w","h","projection","d3","center","translate","scale","hashtags","tags","key","startsWith","pathGenerator","states","map","d","i","fill","pos","properties","total","stroke","strokeWidth","onMouseOver","e","countryIndex","console","log","style","transition","duration","attr","html","name","pageX","pageY","handleCountryClick","onMouseOut","id","width","height","Component","styles","updateDate","marginBottom","Cards","mentions","words","Row","Col","Card","Body","Title","t1","w1","t2","w2","t3","w3","t4","w4","t5","w5","React","chart","flex","CustomReferenceDotOrange","cx","r","cy","attributeName","from","to","dur","begin","repeatCount","Timeline","margin","top","right","left","bottom","strokeDasharray","dataKey","verticalAlign","wrapperStyle","lineHeight","x","label","y","shape","type","animationDuration","PureComponent","mapBullets10","backgroundColor","mapBullets30","mapBullets50","mapBullets80","removeBullets","Home","Container","data_pie","value","renderActiveShape","RADIAN","Math","PI","midAngle","innerRadius","outerRadius","startAngle","endAngle","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","dy","toFixed","activeIndex","onPieEnter","_","index","activeShape","onMouseEnter","SentimentAnalysis","TimelineEmotions","TimelinePolarity","MexicoCityMap","statistics","sintomas","mentales","stateIndex","nomgeo","SymptomsMonitor","About","footerStyles","paddingTop","Footer","NavBar","Navbar","collapseOnSelect","expand","bg","variant","Brand","as","Link","Toggle","aria-controls","Collapse","Nav","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7a5ae03e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport './map.css'\n\nimport * as json from '../data/map_hashtags_result.json';\n\n\n/*\nTODO: ¿Esto porque esta comentado?\nhttps://observablehq.com/@d3/state-choropleth?collection=@d3/d3-geo\nhttps://medium.com/@zimrick/how-to-create-pure-react-svg-maps-with-topojson-and-d3-geo-e4a6b6848a98\nhttps://react-bootstrap.github.io/components/overlays/#popovers\nhttps://github.com/react-bootstrap/react-bootstrap/issues/1622\nhttps://www.w3schools.com/howto/howto_js_popup.asp\n*/\n\n/** \n@fileoverview: WorldMap.js\n@version: 1.0.0\n@author: Miopers\n@copyright: GIL UNAM \n@see: http://www.miopers.unam.mx/covid/#/\n\nHistory: Versón 1.0.0 Verión inical del programa desplegable de Miopers para analisis de \n  tweets COVID19 versión actualmente desplegable.\n\nSummary: Archivo para relizar la gráfica interactiva de la cantidad de tweets en la republica mexicana, el\n archivo igual se encuentra referenciado en la carpeta emotions y tiene la misma funcionalidad que aquí. \n TODO: Hay que mejorar la práctica para que si los 2 arcihvos jalan diferente tipo de información, ambas \n no se repitan y especificar las fuentes de información.\n\n*/\n\nclass WorldMap extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      wMap: 500, // Bien\n      hMap: 600, // Bien\n      wSvg: 1000, // Bien\n      hSvg: 600, //\n      error: null,\n      isLoaded: false,\n      data: [],\n      time: 'Pendiente',\n    };\n    //console.log(json);\n    //console.log(\"pepo\");\n  }\n\n  componentDidMount() {\n    /**\n     * @overview: Método de ajuste que nos permite reajustar el mapa al tamaño de la pantalla y carga de datos\n     * @returns: Reajuste del tamaño del mapa y carga de los datos desde un repositorio github\n     */\n\n    window.addEventListener(\"resize\", this.resize.bind(this));\n    this.resize();\n\n    //fetch(\"https://raw.githubusercontent.com/RicardoJC/Mexico-Datos-COVID19/master/home/mexico.geojson\")\n    fetch(\"https://raw.githubusercontent.com/Grimaldo095/pruebas/main/map_hashtags_result.geojson\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                isLoaded: true,\n                data: result.features,\n                time : result.time\n              });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n          );\n  }\n\n  resize() {\n    /**\n     * @overview: Ajuste de parámetros iniciales para el tamaño de los mapas en la aplicación, los tamaños \n     * se ajustan de acuerdo un tamaño inicial pero se reajustan\n     * @returns: Dimensión del mapa interactivo de la republica mexicana.\n     */\n\n    if (window.innerWidth >= 1200){\n      this.setState({\n        wMap: 500, // Bien\n        hMap: 600, // Bien\n        wSvg: 1000, // Bien\n        hSvg: 600 //\n      });\n    }else if(window.innerWidth <= 1200 && window.innerWidth >= 990){\n      this.setState({\n        wMap: 400, // Bien\n        hMap: 500, // Bien\n        wSvg: 800, // Bien\n        hSvg: 500 //\n      });\n    }else if(window.innerWidth <= 990 && window.innerWidth >= 760){\n      this.setState({\n        wMap: 300, // Bien\n        hMap: 400, // Bien\n        wSvg: 600, // Bien\n        hSvg: 400 //\n      });\n    }else{\n      this.setState({\n        wMap: 200, // Bien\n        hMap: 300, // Bien\n        wSvg: 380, // Bien\n        hSvg: 300 //\n      });\n    }\n\n    //this.setState({hideNav: window.innerWidth <= 760});\n  }\n\n  render() {\n    /**\n     * @overview: Método de despliegue del mapa mostrando la información desplegada en la página web o en su caso\n     *  el mensaje de error donde no se puede cargar el mapa por medio del uso de la librería d3 y geojson.\n     * @returns: Devuelve en la página web la información del mapa de la rep mexicana y los tweets registrados por estado o marca error\n     */\n\n\n    //const { error, isLoaded, data, time } = this.state;\n    const {error, isLoaded} = this.state;\n    const {features,time} = json;\n    const data = features;\n\n    if(error){\n      return <div className='d-flex justify-content-center'>Error al cargar el mapa</div>\n    }else if(!isLoaded){\n      return <div className='d-flex justify-content-center'>Cargando mapa...</div>\n    }else{\n\n      var w = this.state.wMap,h = this.state.hMap;\n      const projection = d3.geoMercator()\n      .center([-110, 22])\n      .translate([w / 2, h / 1.7])\n      .scale([w / .3]);\n\n      const handleCountryClick = (e,data,countryIndex) => {\n        console.log(\"Clicked on country: \", data);\n        d3.select('.nav_map').style('visibility','')\n        d3.select('.nav_map').style('visibility','visible')\n        d3.select('.nav_map').transition().duration(200).attr('opacity',0.9)\n        d3.select('.nav_map').html(\"<h5>\" + data.properties.name + \"</h5>\" +\n        \"<span class='font-weight-light'>Total de tweets: <br/> <span/><span class='font-weight-bolder'>\"+this.state.data[countryIndex].properties.data.total+\"</span><br/>\" +\n        \"<span class='font-weight-light'>Top 3 Hashtags: <br/><span/><span class='font-weight-bolder'>\"+ hashtags(this.state.data[countryIndex].properties.data) +\"</span>\").style('left',(e.pageX) + 'px').style('top',(e.pageY-10) + 'px')\n      }\n\n      const mouseOut = (data, countryIndex) => {\n        d3.select('.nav_map').transition().duration(500).attr('opacity',0)\n        d3.select('.nav_map').style('visibility','hidden')\n      }\n\n      const colorIntensity = pos =>{\n        if(pos > 25000){\n          return 0.9;\n        }else if(pos > 15000 && pos <= 25000){\n          return 0.7;\n        }else if(pos > 5000 && pos <= 15000){\n          return 0.5;\n        }else{\n          return 0.3;\n        }\n      }\n\n      const hashtags = data => {\n        var tags = '';\n        for (var key in data){\n          if (key.startsWith('#')){\n              tags = tags + key + ' : ' + data[key] + '\\n'\n          }\n        }\n        return tags;\n      }\n\n\n\n      const pathGenerator = d3.geoPath().projection(projection);\n      const states = data\n         .map((d,i) => <path\n         key={'path' + i}\n         d={pathGenerator(d)}\n         className='states'\n         fill={ `rgba(49,104,232,${ colorIntensity(d.properties.data.total) })` }\n         stroke=\"#000\"\n         strokeWidth={ 1 }\n         onMouseOver = { (e) => handleCountryClick(e,d,i) }\n         onMouseOut = {() => mouseOut(d,i)}\n         />);\n\n         return(\n           <div>\n           <div className='d-flex justify-content-center font-weight-lighter'>\n             <span>Última actualización: {time}</span>\n           </div>\n           <div className='d-flex justify-content-center' id='map'>\n             <div className='nav_map'></div>\n             <svg width={this.state.wSvg} height={this.state.hSvg}>\n             {states}\n             </svg>\n           </div>\n           </div>\n\n\n        );\n\n    }\n\n  }\n\n\n}\nexport default WorldMap;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport * as json from '../data/words_results.json';\n\n\n/** \n@fileoverview: Cards.js\n@version: 1.0.0\n@author: Miopers\n@copyright: GIL UNAM \n@see: http://www.miopers.unam.mx\n\nHistory: Versón 1.0.0 Verión inical del programa desplegable de Miopers para analisis de \n  tweets COVID19 versión actualmente desplegable.\n\nSummary: Archivo con código necesario para la visualización de las targetas en la página web \ncon información de tweets o links  otras targetas.\n*/\n\n\n// constante de formato css para las targetas y sus bordes\nconst styles = {\n  updateDate:{\n    marginBottom:'20px'\n  }\n};\n\n\n\nclass Cards extends React.Component{\n\n  /**\n   * @returns: Clase constructora de las cartas de información en react. Regresa y despliega en en la página\n   * web la información relativa a cantidad de tweets descargados por arranque de sesión.\n   */\n\n  // Método constyructor para los datos de las cartas.\n  constructor(props){\n    super(props)\n    this.state = {\n      error:null,\n      data:[],\n      time:'',\n      isLoaded:false\n    }\n  }\n\n\n//  componentDidMount(){\n    /**\n     * @overview: Método que conecta con el repositorio de datos de los tweets y los lee para extraer el \n     * número total de  tweets descargados y la información que se meustra en las targetas.\n     * @returns: La conexión para la carga de tweets o en su caso el mensaje de error. \n     */\n    //fetch(\"https://raw.githubusercontent.com/RicardoJC/Mexico-Datos-COVID19/master/home/tokens.json\")\n    //fetch(\"https://raw.githubusercontent.com/Grimaldo095/pruebas/main/words_results.json\")\n    // fetch(\"https://raw.githubusercontent.com/GIL-UNAM/Miopers/master/home/data/words_results.json\")\n      //    .then(res => res.json())\n        //  .then(\n          //  (result) => {\n            //  this.setState({\n              //  isLoaded: true,\n                //data: result.data,\n               // time:result.time\n             // });\n            //},\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            //(error) => {\n             // this.setState({\n              //  isLoaded: true,\n               // error\n              //});\n            //}\n         // );\n // }\n\n\n\n\n\n\n  render(){\n    /**\n     * @overview: Método de lectura de los datos del método anterior y visualización. \n     * Se crean el Body de las targetas así como la carga de la relativa información de cada una. \n     * La información que se recaba son: Hastags de hoy, mensiones de hoy y palabras de hoy.\n     * @see: http://www.miopers.unam.mx/covid/#/\n     */\n    //const {error,isLoaded,time} = this.state;\n    const {data,time} = json;\n    console.log(data);\n    var hashtags = {t1:'',w1:'',t2:'',w2:'',t3:'',w3:'',t4:'',w4:'',t5:'',w5:''};\n    var mentions = {t1:'',w1:'',t2:'',w2:'',t3:'',w3:'',t4:'',w4:'',t5:'',w5:''};\n    var words = {t1:'',w1:'',t2:'',w2:'',t3:'',w3:'',t4:'',w4:'',t5:'',w5:''};\n    //if(!error && isLoaded){\n    hashtags = data[0];\n    mentions = data[1];\n    words = data[2];\n    //}\n\n    return(\n\n      <div>\n      <div style={styles.updateDate} className='d-flex justify-content-center font-weight-lighter'>\n        <span>Última actualización: {time}</span>\n      </div>\n        <Row >\n        <Col className='d-flex justify-content-center'>\n        <Card style={{ width: '18rem', height:'19em' }}>\n          <Card.Body>\n          <Card.Title className=\"mb-2 text-muted \">Hashtags de hoy</Card.Title>\n          <div className=\"d-table justify-content-left\">\n            <div className=\"d-table-cell font-weight-bold\"><h2>{hashtags.t1}&nbsp;</h2></div>\n            <div className=\"d-table-cell text-muted\">{hashtags.w1}</div>\n          </div>\n\n          <div className=\"d-table justify-content-left\">\n            <div className=\"d-table-cell font-weight-bold\"><h2>{hashtags.t2}&nbsp;</h2></div>\n            <div className=\"d-table-cell text-muted\">{hashtags.w2}</div>\n          </div>\n\n          <div className=\"d-table justify-content-left\">\n            <div className=\"d-table-cell font-weight-bold\"><h2>{hashtags.t3}&nbsp;</h2></div>\n            <div className=\"d-table-cell text-muted\">{hashtags.w3}</div>\n          </div>\n\n          <div className=\"d-table justify-content-left\">\n            <div className=\"d-table-cell font-weight-bold\"><h2>{hashtags.t4}&nbsp;</h2></div>\n            <div className=\"d-table-cell text-muted\">{hashtags.w4}</div>\n          </div>\n\n          <div className=\"d-table justify-content-left\">\n            <div className=\"d-table-cell font-weight-bold\"><h2>{hashtags.t5}&nbsp;</h2></div>\n            <div className=\"d-table-cell text-muted\">{hashtags.w5}</div>\n          </div>\n\n          </Card.Body>\n        </Card>\n        </Col>\n\n          <Col className='d-flex justify-content-center'>\n          <Card style={{ width: '18rem', height:'19em' }}>\n          <Card.Body>\n            <Card.Title className=\"mb-2 text-muted \">Menciones de hoy</Card.Title>\n            <div className=\"d-table justify-content-left\">\n              <div className=\"d-table-cell font-weight-bold\"><h2>{mentions.t1}&nbsp;</h2></div>\n              <div className=\"d-table-cell text-muted\">{mentions.w1}</div>\n            </div>\n\n            <div className=\"d-table justify-content-left\">\n              <div className=\"d-table-cell font-weight-bold\"><h2>{mentions.t2}&nbsp;</h2></div>\n              <div className=\"d-table-cell text-muted\">{mentions.w2}</div>\n            </div>\n\n            <div className=\"d-table justify-content-left\">\n              <div className=\"d-table-cell font-weight-bold\"><h2>{mentions.t3}&nbsp;</h2></div>\n              <div className=\"d-table-cell text-muted\">{mentions.w3}</div>\n            </div>\n\n            <div className=\"d-table justify-content-left\">\n              <div className=\"d-table-cell font-weight-bold\"><h2>{mentions.t4}&nbsp;</h2></div>\n              <div className=\"d-table-cell text-muted\">{mentions.w4}</div>\n            </div>\n\n            <div className=\"d-table justify-content-left\">\n              <div className=\"d-table-cell font-weight-bold\"><h2>{mentions.t5}&nbsp;</h2></div>\n              <div className=\"d-table-cell text-muted\">{mentions.w5}</div>\n            </div>\n\n          </Card.Body>\n          </Card>\n          </Col>\n\n          <Col className='d-flex justify-content-center'>\n          <Card style={{ width: '18rem', height:'19em' }}>\n          <Card.Body>\n            <Card.Title className=\"mb-2 text-muted \">Palabras de hoy</Card.Title>\n            <div className=\"d-table justify-content-left\">\n              <div className=\"d-table-cell font-weight-bold\"><h2>{words.t1}&nbsp;</h2></div>\n              <div className=\"d-table-cell text-muted\">{words.w1}</div>\n            </div>\n\n            <div className=\"d-table justify-content-left\">\n              <div className=\"d-table-cell font-weight-bold\"><h2>{words.t2}&nbsp;</h2></div>\n              <div className=\"d-table-cell text-muted\">{words.w2}</div>\n            </div>\n\n            <div className=\"d-table justify-content-left\">\n              <div className=\"d-table-cell font-weight-bold\"><h2>{words.t3}&nbsp;</h2></div>\n              <div className=\"d-table-cell text-muted\">{words.w3}</div>\n            </div>\n\n            <div className=\"d-table justify-content-left\">\n              <div className=\"d-table-cell font-weight-bold\"><h2>{words.t4}&nbsp;</h2></div>\n              <div className=\"d-table-cell text-muted\">{words.w4}</div>\n            </div>\n\n            <div className=\"d-table justify-content-left\">\n              <div className=\"d-table-cell font-weight-bold\"><h2>{words.t5}&nbsp;</h2></div>\n              <div className=\"d-table-cell text-muted\">{words.w5}</div>\n            </div>\n\n\n          </Card.Body>\n          </Card>\n          </Col>\n        </Row>\n      </div>\n\n\n    );\n  }\n}\n\n\nexport default Cards;\n","import React, { PureComponent } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis,\n  CartesianGrid, Tooltip, Brush,Legend, AreaChart, Area,\n  ResponsiveContainer,ReferenceLine, ReferenceArea\n  } from 'recharts';\nimport ReferenceDot from 'recharts/lib/cartesian/ReferenceDot';\n\nimport * as json from '../data/timeline_result.json';\n\n/** \n@fileoverview: Timeline.js\n@version: 1.0.0\n@author: Miopers\n@copyright: GIL UNAM \n@see: http://www.miopers.unam.mx/covid/#/\n\nHistory: Versón 1.0.0 Verión inical del programa desplegable de Miopers para analisis de \n  tweets COVID19 versión actualmente desplegable.\n\nSummary: Script donde se configura el despliegue de la gráfica de palabras clave en la sección de linea del\n  tiempo de palabras clave en la página COVID-19 México de Miopers\n*/\n\n\n// Constantes de bordes y forma del gráfico\nconst styles = {\n  chart:{\n    flex: 1,\n    width: 0\n  },\n  updateDate:{\n    marginBottom:'10px'\n  }\n};\n\n// Ejemplo customatizado de referencia con dot Reference.\nconst CustomReferenceDotOrange = props => {\n  return (\n    <circle cx={props.cx} r=\"5\" cy={props.cy} fill=\"#e65100\">\n      <animate\n        attributeName=\"r\"\n        from=\"8\"\n        to=\"15\"\n        dur=\"1.5s\"\n        begin=\"0s\"\n        repeatCount=\"indefinite\"\n      />\n    </circle>\n  );\n};\n\n\nclass Timeline extends PureComponent {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: [],\n      time:''\n    };\n  }\n\n  render() {\n    /**\n     * @overview: Método de lectura de los datos del método anterior y visualización. \n     * Se crea la estructura general de la gráfica o se manda le mensaje de que no puede ser desplegada. \n     * Se despliega el código de la gráfica dinamica de los tweets de las palabras claves seleccionadas.\n     * @see: http://www.miopers.unam.mx/covid/#/\n     */\n    const {data,time} = json;\n      return (\n\n        <div style={styles.chart} >\n          <div style={styles.updateDate} className='d-flex justify-content-center font-weight-lighter'>\n            <span>Última actualización: {time}</span>\n          </div>\n        <ResponsiveContainer width=\"99%\" height={400}>\n        <LineChart\n          data={data}\n          margin={{\n            top: 5, right: 25, left: 20, bottom: 7,\n          }}\n          >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"day\" />\n          <YAxis />\n          <Tooltip />\n          <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\n          <ReferenceLine x=\"2020-05-31\" label=\"Fin de jornada de sana distancia\" stroke=\"red\" />\n          <ReferenceDot x=\"2020-07-26\" y={600} label=\"Semaforo\" shape={CustomReferenceDotOrange}/>\n          <ReferenceDot x=\"2020-04-21\" y={200} label=\"Fase 3\" stroke=\"red\"/>\n          <ReferenceDot x=\"2021-05-13\" y={200} label=\"Inicio Vacunación\" />\n          <ReferenceDot x=\"2020-06-16\" y={200} label=\"Segunda ola contagios\" stroke=\"blue\"/>\n          <ReferenceDot x=\"2020-05-07\" y={350} label=\"Segundo confinamiento\" stroke=\"red\"/>\n          <Line type=\"monotone\" dataKey=\"coronavirus\" stroke=\"#00e676\" strokeWidth='1' animationDuration={4000} />\n          <Line type=\"monotone\" dataKey=\"quedateencasa\" stroke=\"#1b5e20\" strokeWidth='1' animationDuration={3500}/>\n          <Line type=\"monotone\" dataKey=\"covid19\" stroke=\"#e65100\" strokeWidth='1' animationDuration={1500}/>\n          <Line type=\"natural\" dataKey=\"@HLGatell\" stroke=\"#f44336\" strokeWidth='1' animationDuration={3000}/>\n          <Line type=\"natural\" dataKey=\"@lopezobrador_\" stroke=\"#b71c1c\" strokeWidth='1' animationDuration={2500}/>\n          <Line type=\"natural\" dataKey=\"SusanaDistancia\" stroke=\"#ffab00\" strokeWidth='1' animationDuration={2000}/>\n        <Brush dataKey=\"day\" height={40} stroke=\"#8884d8\"  />\n        </LineChart>\n        </ResponsiveContainer>\n        </div>\n\n\n\n      );\n    \n\n\n\n  }\n}\n\n\nexport default Timeline;\n","import React from 'react';\nimport WorldMap from './WorldMap';\nimport Cards from './Cards';\nimport Timeline from './Timeline'\nimport Container from 'react-bootstrap/Container';\n\n/** \n@fileoverview: Home.js\n@version: 1.0.0\n@author: Miopers\n@copyright: GIL UNAM \n@see: http://www.miopers.unam.mx/covid/#/\n\nHistory: Versón 1.0.0 Verión inical del programa desplegable de Miopers para analisis de \n  tweets COVID19 versión actualmente desplegable.\n\nSummary: El siguiente script muestra el código de la sección 'COVID-19 México' que es la primera primera\n  sección que aparece de la página web. En este scritp se muestra la estructura base de esta página. \n*/\n\n// Constantes de color para el mápa de Top 3 tweets por estado de la rep mexicana.\nconst styles = {\n  mapBullets10:{\n    backgroundColor: '#3168e81a',\n  },\n  mapBullets30:{\n    backgroundColor: '#3168e84d',\n  },\n  mapBullets50:{\n    backgroundColor: '#3168e880',\n  },\n  mapBullets80:{\n    backgroundColor: '#3168e8cc',\n  },\n  removeBullets:{\n    'list-style-type': 'none'\n  }\n};\n\nclass Home extends React.Component{\n\n    render(){\n\n        /**\n        * @overview: Método de lectura de los datos del método anterior y visualización. \n        * Creación de la estructura y orden de la página por secciones \n        * El código muestra la configuración de la gráfica que es desplegada en la página web (estados republica) \n        * @see: http://www.miopers.unam.mx/covid/#/sintomas\n        */\n\n      \n        return(\n        \n            <div>\n            <Container className='mt-5 mb-5'>\n            {/* Encabezado y descripción de los elementos de la página*/}\n              <div>\n                <h1>Análisis de Twitter para COVID-19</h1>\n                <p>\n                  Este es un sistema automático de vigilancia de COVID19 mediante Twitter.\n                  Se busca evaluar el comportamiento de las personas, estados de ánimo, la popularidad\n                  de las medidas del tomadas por el gobierno y síntomas de coronavirus.\n                </p>\n              </div>\n\n              <div className='mt-5 mb-5'>\n              {/* Sección de las targetas con las información de las targetas de tweets*/}\n              \n                <div className='d-flex justify-content-center'>\n                  <h1> Palabras clave de hoy</h1>\n                </div>\n                <div className='d-flex justify-content-center text-secondary'>\n                  <p>\n                    A continuación se enlistan los (#) hashtags, (@) menciones y palabras más frecuentes relacionados con la pandemia.\n                  </p>\n                </div>\n                <Cards/>\n              </div>\n\n\n              <div className='mt-5 mb-5'>\n                <div className='d-flex justify-content-center'>\n                  <h1> Línea del tiempo de palabras clave </h1>\n                </div>\n              {/* Sección de la linea de tiemop con las palabras claves por tweets */}\n                <div className='d-flex justify-content-center text-secondary'>\n                  <p>\n                    La siguiente línea del tiempo presenta 6 palabras clave dentro de los tweets obtenidos cada semana.\n                    Las primeras 4 palabras son acerca del virus y el aislamiento social: <b>coronavirus</b>, <b>quedateencasa</b>, <b>covid19</b> y <b>Susanadistancia</b>.\n                    Se tomaron en cuenta las menciones más frecuentes referentes a <b>Lopez Gatell</b> y <b>Lopez Obrador</b>.\n                    Esto para conocer cómo se van mencionando a medida que pasa el tiempo y el virus avanza.\n                  </p>\n                </div>\n                <div className='d-flex justify-content-center text-secondary'>\n                  <Timeline/>\n                </div>\n\n              </div>\n\n              <div className='mt-5 mb-5'>\n                <div className='d-flex justify-content-center'>\n                  <h1> Estados de la República </h1>\n                </div>\n                <div className='d-flex justify-content-center text-secondary'>\n                {/* Mapa de los estados de la republica con los top 3 hashtags por estado.*/}\n                  <p>\n                    En el siguiente mapa se muestran el <b>Top 3 Hashtags</b> con el total de tweets que hablan acerca del tema de COVID19 por cada estado desde el 31 de marzo 2020.\n                    La intensidad de color está definida por <b>la cantidad de tweets que se generan en la región</b>:\n                  </p>\n                </div>\n                <div className='d-flex justify-content-center text-secondary'>\n                <ul style={styles.removeBullets}>\n                  <li> <span style={styles.mapBullets80}>‎‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎</span> ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ <b> x &gt; 25000</b>  número de menciones </li>\n                  <li> <span style={styles.mapBullets50}>‎‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎</span> ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ <b> 15000 &gt; x &gt; 25000</b>  número de menciones</li>\n                  <li> <span style={styles.mapBullets30}>‎‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎</span> ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ <b> 5000 &gt; x &gt; 2500</b>  ‎‏‏‎número de menciones </li>\n                  <li> <span style={styles.mapBullets10}>‎‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ ‎</span> ‎‏‏‎ ‎‏‏‎ ‎‏‏‎ <b> 5000 &lt; x</b>  número de menciones </li>\n                </ul>\n                </div>\n                <WorldMap/>\n              </div>              \n \n{/*\n  TODO: ¿Porqué esta comentada esta línea de código \n\n  <div className='mt-5 mb-5'>\n  \n    <div className='d-flex justify-content-center'>\n      <h1> Emociones en redes sociales </h1>\n      </div>\n      <div className='d-flex justify-content-center text-secondary'>\n      <p>\n        El siguiente radar muestra las emociones que se han generado en el\n        discurso de tweets (Testing)\n      </p>\n    </div>\n    <div className='d-flex justify-content-center text-secondary'>\n      <EmotionalRadar/>\n    </div>\n\n  </div>*/}\n\n\n\n\n            </Container>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, { PureComponent } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis,\n  CartesianGrid, Tooltip, Brush,Legend, AreaChart, Area,\n  ResponsiveContainer,ReferenceLine, ReferenceArea\n  } from 'recharts';\nimport * as json from '../data/EmocionesTwitter_X_Estados_X_Tiempo_Covid.json';\n\n\n/** \n@fileoverview: TimelineEmotions.js\n@version: 1.0.0\n@author: Miopers\n@copyright: GIL UNAM \n@see: http://www.miopers.unam.mx/covid/#/emociones\n\nHistory: Versón 1.0.0 Verión inical del programa desplegable de Miopers para analisis de \n  tweets COVID19 versión actualmente desplegable.\n\nSummary: Script donde se configura el despliegue de la gráfica de palabras clave en la sección de linea del\n  tiempo de palabras clave en la página COVID-19 México de Miopers\n*/\n\n\nconst styles = {\n  chart:{\n    flex: 1,\n    width: 0\n  },\n  updateDate:{\n    marginBottom:'10px'\n  }\n};\n\n\nclass Timeline extends PureComponent {\n  // Método constructor para inicializar las variables de información\n  constructor(props){\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: [],\n      time:''\n    };\n  }\n\n  render() {\n    /**\n     * @overview: Método de lectura de los datos del método anterior y visualización. \n     * Se crea la estructura general de la gráfica o se manda le mensaje de que no puede ser desplegada. \n     * Se despliega el código de la gráfica dinamica de las emociones de la sección: 'Análisis de emociones'\n     * O en caso contrario se de información de que no se puede cargar.\n     * @see: http://www.miopers.unam.mx/covid/#/emociones\n     */\n    const {data, time } = json;\n      return (\n\n        <div style={styles.chart} >\n          <div style={styles.updateDate} className='d-flex justify-content-center font-weight-lighter'>\n            <span>Última actualización: {time}</span>\n          </div>\n        <ResponsiveContainer width=\"99%\" height={400}>\n        <LineChart\n          data={data}\n          margin={{\n            top: 5, right: 20, left: 20, bottom: 5,\n          }}\n          >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"day\" />\n          <YAxis />\n          <Tooltip />\n          <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\n          <ReferenceLine x=\"2020-04-21\" label=\"Fase 3\" stroke=\"red\" />\n          <ReferenceLine x=\"2020-05-31\" label=\"Fin de jornada de sana distancia\" stroke=\"red\" />\n          <Line type=\"natural\" dataKey=\"enojo\" stroke=\"#fc1303\" strokeWidth='1' animationDuration={1000} />\n          <Line type=\"natural\" dataKey=\"anticipación\" stroke=\"#ff9626\" strokeWidth='1' animationDuration={1500}/>\n          <Line type=\"natural\" dataKey=\"disgusto\" stroke=\"#c338f5\" strokeWidth='1' animationDuration={2000}/>\n          <Line type=\"natural\" dataKey=\"miedo\" stroke=\"#229426\" strokeWidth='1' animationDuration={2500}/>\n          <Line type=\"natural\" dataKey=\"alegría\" stroke=\"#f6fa1e\" strokeWidth='1' animationDuration={3000} />\n          <Line type=\"natural\" dataKey=\"tristeza\" stroke=\"#433bdb\" strokeWidth='1' animationDuration={3500}/>\n          <Line type=\"natural\" dataKey=\"sorpresa\" stroke=\"#27e0f5\" strokeWidth='1' animationDuration={4000}/>\n          <Line type=\"natural\" dataKey=\"confianza\" stroke=\"#9ff5ab\" strokeWidth='1' animationDuration={4500}/>\n      <Brush dataKey=\"day\" height={40} stroke=\"#8884d8\"  />\n      </LineChart>\n        </ResponsiveContainer>\n        </div>\n\n\n\n      );\n\n\n\n  }\n}\n\n\nexport default Timeline;\n","import React, { PureComponent } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis,\n  CartesianGrid, Tooltip, Legend, Sector,\n  ResponsiveContainer,ReferenceLine, Brush, PieChart, Pie\n  } from 'recharts';\nimport * as json from '../data/EmocionesTwitter_X_Estados_X_Tiempo_Polaridad.json';\n\n\n/** \n@fileoverview: TimelinePolarity.js\n@version: 1.0.0\n@author: Miopers\n@copyright: GIL UNAM \n@see: http://www.miopers.unam.mx/covid/#/emociones\n\nHistory: Versón 1.0.0 Verión inical del programa desplegable de Miopers para analisis de \n  tweets COVID19 versión actualmente desplegable.\n\nSummary: Script donde se configura el despliegue de la gráfica de polaridad de sentimientos \n  en la página 'Análisis de emociones' de Miopers\n*/\n\nconst styles = {\n  chart:{\n    flex: 1,\n    width: 0\n  },\n  updateDate:{\n    marginBottom:'10px'\n  }\n};\n\nconst data_pie = [\n  { name: 'Tweets Positivos', value: 6000 },\n  { name: 'Tweets Negativos', value: 2500 },\n  { name: 'Tweets Neutros', value: 3000 },\n  \n];\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle, fill, payload, percent, value } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? 'start' : 'end';\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n        {payload.name}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`PV ${value}`}</text>\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\n        {`(Rate ${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n};\n\nclass Timeline extends PureComponent {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: [],\n      time:''\n    };\n  }\n\nstate = {\n    activeIndex: 0,\n  };\n\n  onPieEnter = (_, index) => {\n    this.setState({\n      activeIndex: index,\n    });\n  };\n\n  render() {\n    /**\n     * @overview: Método de lectura de los datos del método anterior y visualización. \n     * Se crea la estructura general de la gráfica o se manda le mensaje de que no puede ser desplegada. \n     * Se despliega el código de la gráfica dinamica de las polaridades de emociones de la sección: 'Análisis de emociones'\n     * O en caso contrario se de información de que no se puede cargar.\n     * @see: http://www.miopers.unam.mx/covid/#/emociones\n     */\n    const {data, time } = json;\n      return (\n\n        <div style={styles.chart} >\n          <div style={styles.updateDate} className='d-flex justify-content-center font-weight-lighter'>\n            <span>Última actualización: {time}</span>\n          </div>\n        <ResponsiveContainer width=\"99%\" height={400}>\n        <LineChart\n          data={data}\n          margin={{\n            top: 5, right: 20, left: 20, bottom: 5,\n          }}\n          >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"day\" />\n          <YAxis />\n          <Tooltip />\n          <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\n          <ReferenceLine x=\"2020-04-21\" label=\"Fase 3\" stroke=\"red\" />\n          <ReferenceLine x=\"2020-05-31\" label=\"Fin de jornada de sana distancia\" stroke=\"red\" />\n          <Line type=\"natural\" dataKey=\"Tweets_Negativo\" stroke=\"#c338f5\" strokeWidth='1' animationDuration={2000}/>\n          <Line type=\"natural\" dataKey=\"Tweets_Positivo\" stroke=\"#433bdb\" strokeWidth='1' animationDuration={2500}/>\n          <Line type=\"natural\" dataKey=\"Tweets_Neutro\" stroke=\"#888888\" strokeWidth='1' animationDuration={3000} />\n    <Brush dataKey=\"day\" height={40} stroke=\"#8884d8\"  />\n    </LineChart>\n        </ResponsiveContainer>\n\n\t<ResponsiveContainer width=\"99%\" height={400}>\n        <PieChart width={400} height={400}>\n          <Pie\n            activeIndex={this.state.activeIndex}\n            activeShape={renderActiveShape}\n            data={data_pie}\n            cx=\"50%\"\n            cy=\"50%\"\n            innerRadius={80}\n            outerRadius={100}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n            onMouseEnter={this.onPieEnter}\n          />\n        </PieChart>\n        </ResponsiveContainer>\n\n        </div>\n\n\n\n      );\n\n\n\n  }\n}\n\n\nexport default Timeline;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport TimelineEmotions from './TimelineEmotions';\nimport TimelinePolarity from './TimelinePolarity';\n\n/** \n@fileoverview: SentimentAnalysis.js\n@version: 1.0.0\n@author: Miopers\n@copyright: GIL UNAM \n@see: http://www.miopers.unam.mx/covid/#/emociones\n\nHistory: Versón 1.0.0 Verión inical del programa desplegable de Miopers para analisis de \n  tweets COVID19 versión actualmente desplegable.\n\nSummary: Script que aporta la estructura general de la página 'Análisis de emociones' la cual nos sirve de base para el almacenamiento\nde todo el resto de gráficas.\n*/\n\nclass SentimentAnalysis extends React.Component{\n    render(){\n      /**\n     * @overview: Método de estructura general del documento, en este se establece la estructura de la página y sus gráficas\n     * @returns: Diseño de secciones de la pagina web. \n     */\n\n        return(\n            <div>\n                <Container className='mt-5 mb-5'>\n                <div>\n                  <h1>Análisis de emociones</h1>\n                  <p>\n                    Este es un sistema que monitorea las emociones provocadas por el COVID19 en Twitter\n                  </p>\n                </div>\n\n                <div className='mt-5 mb-5'>\n\n                  <div className='d-flex justify-content-center'>\n                    <h1> Línea del tiempo de emociones </h1>\n                  </div>\n\n                  <div className='d-flex justify-content-center text-secondary'>\n                    <p>\n                      La siguiente línea del tiempo presenta las emociones causadas en los usuarios de la\n                      red social.\n                    </p>\n                  </div>\n                  <div className='d-flex justify-content-center text-secondary'>\n                    <TimelineEmotions/>\n                  </div>\n\n                </div>\n\n      \n                <div className='mt-5 mb-5'>\n                  <div className='d-flex justify-content-center'>\n                    <h1> Línea del tiempo de polaridad </h1>\n                  </div>\n\n                  <div className='d-flex justify-content-center text-secondary'>\n                    <p>\n                      La siguiente línea del tiempo presenta la polaridad de los mensajes\n                      escritos por los usuarios.\n                    </p>\n                  </div>\n                  <div className='d-flex justify-content-center text-secondary'>\n                    <TimelinePolarity/>\n                  </div>\n                </div>\n\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default SentimentAnalysis;\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as json from '../data/alcaldias_result.json';\n\n\n/** \n@fileoverview: MexicoCityMap.js\n@version: 1.0.0\n@author: Miopers\n@copyright: GIL UNAM \n@see: http://www.miopers.unam.mx/covid/#/\n\nHistory: Versón 1.0.0 Verión inical del programa desplegable de Miopers para analisis de \n  tweets COVID19 versión actualmente desplegable.\n\nSummary: Script donde se configura el desplegable de el mapa de la ciudad de México para \n  los casos de tweets más vistos.\n*/\n\n\n/*\nhttps://observablehq.com/@d3/state-choropleth?collection=@d3/d3-geo\nhttps://medium.com/@zimrick/how-to-create-pure-react-svg-maps-with-topojson-and-d3-geo-e4a6b6848a98\nhttps://react-bootstrap.github.io/components/overlays/#popovers\nhttps://github.com/react-bootstrap/react-bootstrap/issues/1622\nhttps://www.w3schools.com/howto/howto_js_popup.asp\n*/\n\nclass MexicoCityMap extends Component {\n  // Método constructor de la clase que inicializa las dimenciones de la gráfica.\n  constructor(props){\n    super(props);\n    this.state = {\n      wMap: 500, // Bien\n      hMap: 600, // Bien\n      wSvg: 1000, // Bien\n      hSvg: 600, //\n      error: null,\n      isLoaded: false,\n      data: [],\n      time: 'Pendiente',\n      statistics:[]\n    };\n  }\n\n  componentDidMount() {\n    /**\n     * @overview: Método de carga de los datos para la gráfica mediante la conexión con \n     * un repositorio que contiene el script para la lectra de los datos en un .json \n     * @returns: La conexión para la carga de tweets o en su caso el mensaje de error.\n     */\n    window.addEventListener(\"resize\", this.resize.bind(this));\n    this.resize();\n\n    //fetch(\"https://raw.githubusercontent.com/RicardoJC/Mexico-Datos-COVID19/master/symptoms/alcaldias.json\")\n    fetch(\"https://raw.githubusercontent.com/Grimaldo095/pruebas/main/alcaldias%20(1).json\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                isLoaded: true,\n                data: result.features,\n                time: result.time\n              });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n          );\n  }\n\n  resize() {\n    /**\n     * @overview: Método de reajusta el diseño de las gráfica, poniendo los tamaños que se adecuen\n     * al formato y tamaño de la página web. \n     * @returns: Las dimensiones con las que aparecerá la gráfica en la página web. \n     */\n    if (window.innerWidth >= 1200){\n      this.setState({\n        wMap: 500, // Bien\n        hMap: 600, // Bien\n        wSvg: 1000, // Bien\n        hSvg: 600 //\n      });\n    }else if(window.innerWidth <= 1200 && window.innerWidth >= 990){\n        this.setState({\n        wMap: 400, // Bien\n        hMap: 500, // Bien\n        wSvg: 800, // Bien\n        hSvg: 500 //\n      });\n    }else if(window.innerWidth <= 990 && window.innerWidth >= 760){\n      this.setState({\n        wMap: 300, // Bien\n        hMap: 400, // Bien\n        wSvg: 600, // Bien\n        hSvg: 400 //\n      });\n    }else{\n      this.setState({\n        wMap: 200, // Bien\n        hMap: 300, // Bien\n        wSvg: 380, // Bien\n        hSvg: 300 //\n      });\n    }\n\n    //this.setState({hideNav: window.innerWidth <= 760});\n  }\n\n\n  render() {\n    /**\n     * @overview: Método modifica los parámetros de posición y ajuste de la gráfica en la pag web\n     * @returns: Parámetros ajustados de la pag web en cuanto a tamaño, forma, colores y posisión por \n     * .geojson\n     */\n\n    const { error, isLoaded} = this.state;\n    const {features,time} = json;\n    const data = features;\n    if(error){\n      return <div className='d-flex justify-content-center'>Error al cargar el mapa</div>\n    }else if(!isLoaded){\n      return <div className='d-flex justify-content-center'>Cargando mapa...</div>\n    }else{\n\n      var w = this.state.wMap,h = this.state.hMap;\n      const projection = d3.geoMercator()\n      .center([-99.12, 19.00])\n      .translate([w/1, h / 0.94])\n      .scale([115*w]);\n\n      const handleCountryClick = (e,data,stateIndex) => {\n        console.log(\"Clicked on country: \", data);\n        d3.select('.nav_map').style('visibility','')\n        d3.select('.nav_map').style('visibility','visible')\n        d3.select('.nav_map').transition().duration(200).attr('opacity',0.9)\n        d3.select('.nav_map').html(\"<h5>\" + data.properties.nomgeo + \"</h5>\" +\n        \"<span class='font-weight-light'>Síntomas COVID19: <br/> <span/><span class='font-weight-bolder'>\" + this.state.data[stateIndex].properties.data.sintomas + \"</span><br/>\" +\n        \"<span class='font-weight-light'>Síntomas mentales: <br/><span/><span class='font-weight-bolder'>\" + this.state.data[stateIndex].properties.data.mentales + \"</span>\").style('left',(e.pageX) + 'px').style('top',(e.pageY-10) + 'px')\n      }\n\n      const mouseOut = (data, countryIndex) => {\n        d3.select('.nav_map').transition().duration(500).attr('opacity',0)\n        d3.select('.nav_map').style('visibility','hidden')\n      }\n\n      const color = pos =>{\n        var covid = pos.sintomas;\n        var mental = pos.mentales;\n        if (covid > mental){\n          return 0.5;\n        }else{\n          return 0.3;\n        }\n      }\n\n\n      const pathGenerator = d3.geoPath().projection(projection);\n      const states = data\n         .map((d,i) => <path\n         key={'path' + i}\n         d={pathGenerator(d)}\n         className='states'\n         fill={ `rgba(49,104,232,${ color(d.properties.data) })` }\n         stroke=\"#000\"\n         strokeWidth={ 1 }\n         onMouseOver = { (e) => handleCountryClick(e,d,i) }\n         onMouseOut = {() => mouseOut(d,i)}\n         />);\n\n         return(\n\n           <div>\n              <div className='d-flex justify-content-center font-weight-lighter'>\n                <span>Última actualización: {time}</span>\n              </div>\n              <div className='d-flex justify-content-center' id='map'>\n                <div className='nav_map '></div>\n                <svg width={this.state.wSvg} height={this.state.hSvg}>\n                  {states}\n                </svg>\n              </div>\n\n           </div>\n\n\n        );\n\n    }\n\n  }\n\n\n}\nexport default MexicoCityMap;\n","import React, { PureComponent } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis,\n  CartesianGrid, Tooltip, Legend, Sector,\n  ResponsiveContainer,ReferenceLine, Brush\n  } from 'recharts';\nimport * as json from '../data/timeline.json';\n\n/** git \n@fileoverview: Timeline.js\n@version: 1.0.0\n@author: Miopers\n@copyright: GIL UNAM \n@see: http://www.miopers.unam.mx/covid/#/\n\nHistory: Versón 1.0.0 Verión inical del programa desplegable de Miopers para analisis de \n  tweets COVID19 versión actualmente desplegable.\n\nSummary: Script donde se configura el despliegue de la gráfica de sintomás en la sección de linea del\n  tiempo de síntomas COVID vs salud mental de Miopers\n*/\n\nconst styles = {\n  chart:{\n    flex: 1,\n    width: 0\n  },\n  updateDate:{\n    marginBottom:'10px'\n  }\n};\n\n\nclass Timeline extends PureComponent {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: [],\n      time:''\n    };\n  }\n\n  render() {\n    /**\n     * @overview: Método de lectura de los datos del método anterior y visualización. \n     * Se crea la estructura general de la gráfica o se manda le mensaje de que no puede ser desplegada. \n     * Se despliega el código de la gráfica dinamica de los tweets de los sintomas COVID vs salud mental\n     * @see: http://www.miopers.unam.mx/covid/#/sintomas\n     */\n    const {data,time} = json;\n      return (\n\n        <div style={styles.chart} >\n          <div style={styles.updateDate} className='d-flex justify-content-center font-weight-lighter'>\n            <span>Última actualización: {time}</span>\n          </div>\n        <ResponsiveContainer width=\"99%\" height={400}>\n        <LineChart\n          data={data}\n          margin={{\n            top: 5, right: 25, left: 20, bottom: 7,\n          }}\n          >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"day\" />\n          <YAxis />\n          <Tooltip />\n          <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\n          <ReferenceLine x=\"2020-04-21\" label=\"Fase 3\" stroke=\"red\" />\n          <ReferenceLine x=\"2020-05-31\" label=\"Fin de jornada de sana distancia\" stroke=\"red\" />\n          <ReferenceLine x=\"2020-06-29\" label=\"Semáforo naranja\" stroke=\"red\" />\n          <Line type=\"natural\" dataKey=\"Sintomas mentales\" stroke=\"#9336b5\" strokeWidth='1' animationDuration={2000} />\n          <Line type=\"natural\" dataKey=\"Sintomas COVID\" stroke=\"#eb0e63\" strokeWidth='1' animationDuration={1500}/>\n          <Brush dataKey=\"day\" height={40} stroke=\"#8884d8\"  />\n          </LineChart>\n        </ResponsiveContainer>\n        </div>\n\n\n\n      );\n    \n\n\n\n  }\n}\n\n\nexport default Timeline;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport MexicoCityMap from './MexicoCityMap';\nimport Timeline from './Timeline';\n\n/** \n@fileoverview: SymptomsMonitor.js\n@version: 1.0.0\n@author: Miopers\n@copyright: GIL UNAM \n@see: http://www.miopers.unam.mx/covid/#/sintomas\n\nHistory: Versón 1.0.0 Verión inical del programa desplegable de Miopers para analisis de \n  tweets COVID19 versión actualmente desplegable.\n\nSummary: Script que sirve como estructura base de 'Monitor de síntomas' en la página de Miopers, \n  donde después depositamos las gráficas y todos los elementos que forman parte de esta sección\n*/\n\nclass SymptomsMonitor extends React.Component{\n\n    render(){\n      /**\n     * @overview: Método de construcción de los elementos de la página web, en esta sección creamos la página y la\n     * dividimos en diferentes secciones para que se visualizen diferentes resultados en diferentes gráficas.\n     * @see: http://www.miopers.unam.mx/covid/#/sintomas\n     */\n        return(\n            <div>\n            <Container className='mt-5 mb-5'>\n\n            <div>\n              <h1>Análisis de síntomas para COVID-19</h1>\n              <p>\n                Este es un sistema automático de vigilancia de síntomas de COVID19 para México\n                Los síntomas presentados tienen 2 categorías principales: los físicos causados por\n                COVID19 como fiebre, tos o gripe y los transtornos ocasionados por el asilamiento\n                social como ansiedad, depresión, insomnio, entre otros.\n\n              </p>\n            </div>\n\n            <div className='mt-5 mb-5'>\n\n              <div className='d-flex justify-content-center'>\n                <h1> Línea del tiempo de síntomas COVID vs salud mental</h1>\n              </div>\n\n              <div className='d-flex justify-content-center text-secondary'>\n                <p>\n                  El siguiente gráfico representa la cantidad de síntomas relacionados al COVID-19\n                  y los estados de salud mental que se pueden presentar en la población debido al aislamiento social y demás factores.\n                  Por cada día se presentan dos valores, cada uno de ellos indica la cantidad de apariciones de síntomas de cada tipo (COVID-19 y estados de salud mental o psicológicos),\n                  esto con el fin de conocer cómo afecta el paso del tiempo a la frecuencia de estos dos valores.\n                </p>\n              </div>\n              <div className='d-flex justify-content-center text-secondary'>\n                <Timeline/>\n              </div>\n\n            </div>\n\n            <div className='mt-5 mb-5'>\n              <div className='d-flex justify-content-center'>\n                <h1> Mapa de síntomas de la CDMX </h1>\n              </div>\n              <div className='d-flex justify-content-center text-secondary'>\n                <p>\n                  El siguiente mapa representa la cantidad de tweets por Alcaldía de la Ciudad de México que contienen síntomas relacionados al COVID-19 y los estados de salud mental relacionados al distanciamiento social.\n                  Estos valores no son acumulativos, por lo que cada día cambian.\n                </p>\n              </div>\n                <MexicoCityMap/>\n            </div>\n{/*\n  <div className='d-flex justify-content-center'>\n      <TweetEmbed id='692527862369357824'/>\n  </div>*/\n}\n\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default SymptomsMonitor;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n/** \n@fileoverview: About\n@version: 1.0.0\n@author: Miopers\n@copyright: GIL UNAM \n@see: http://www.miopers.unam.mx\n\nHistory: Versón 1.0.0 Verión inical del programa desplegable de Miopers para analisis de \n  tweets COVID19 versión actualmente desplegable.\n\nSummary: Descripción escrita en react, donde aparece la información de los colaboradores del proyecto.\n  Y su estatus en este.\n*/\n\nclass About extends React.Component{\n    render(){\n        return(\n            <div>\n\n\n                <Container>\n                // Descripción de los colaboradores del proyecto.\n                <div className='mt-5 mb-5'>\n                  <div className='d-flex justify-content-center'>\n                      <h1>Quiénes somos</h1>\n                  </div>\n                  <div>\n                      <p>Somos un grupo de investigadores, profesores y estudiantes pertenecientes a la Universidad Nacional Autónoma de México (UNAM), particularmente al Instituto de Ingeniería (IIUNAM) y al Instituto de Investigaciones en Matemáticas Aplicadas y en Sistemas (IIMAS) con interés en el procesamiento del lenguaje natural. Este proyecto consta de un sistema automático de vigilancia de COVID19 mediante Twitter, en el cual se busca analizar mensajes de esta red social para evaluar el comportamiento de las personas, estados de ánimo, la popularidad de las medidas dadas por el gobierno, y, además, monitorear usuarios con posibles síntomas de coronavirus en tiempo real a través de Internet.</p>\n                  </div>\n                  <div className='d-flex justify-content-center'>\n                      <h2>Colaboradores principales (orden alfabético)</h2>\n                  </div>\n                </div>\n\n                <div className='mt-5 mb-5'>\n                <Row >\n                  <Col>\n\t\t    <h4 >Gabriel Castillo (IINGEN)</h4>\n                    <ul>\n                        <li>Técnico Académico Titular \"B\" del Instituto de Ingeniería</li>\n                        <li>gch@pumas.iingen.unam.mx</li>\n                  </ul>\n                  </Col>\n\n                  <Col>\n                    <h4 >Gemma Bel Enguix (IINGEN)</h4>\n                    <ul>\n                        <li>Investigadora Titular “A”   del Instituto de Ingeniería</li>\n                        <li>Miembro del Sistema Nacional de   Investigadores</li>\n                        <li>Contacto: gbele@iingen.unam.mx</li>\n                    </ul>\n                  </Col>\n                </Row>\n                </div>\n\n                <div className='mt-5 mb-5'>\n                <Row >\n                  <Col>\n                   <h4>Gerardo Sierra   (INGEN)</h4>\n                  <ul>\n                      <li>Investigador Titular “B” del   Instituto de Ingeniería</li>\n                      <li>Miembro del Sistema Nacional de Investigadores   Nivel II</li>\n                      <li>Contacto: gsierram@iingen.unam.mx</li>\n                  </ul> \n                  </Col>\n\n                  <Col>\n                  <h4>Helena Gómez Adorno (IIMAS)</h4>\n                  <ul>\n                      <li>Investigadora Asociada “C”   del Instituto de Investigaciones en Matemáticas Aplicadas y en Sistemas</li>\n                      <li>Miembro del Sistema Nacional de   Investigadores Nivel I</li>\n                      <li>Contacto: helena.gomez@iimas.unam.mx</li>\n                  </ul>\n                  </Col>\n                </Row>\n                </div>\n\t\t\n\t\t<div className='d-flex justify-content-center'>\n  \t\t  <h3>Otros colaboradores</h3><br></br>\n                </div>\n\t\t<div className='d-flex justify-content-center'>\n  \t        <ul>\n\t\t  <li>Jessica Sarahi Méndez Rincón</li>\n\t\t  <li>Jesús Germán Ortiz Barajas</li>\n\t\t  <li>José Armando López Velasco</li>\n\t\t  <li>Pablo Camacho González</li>\n\t\t  <li>Ricardo Jiménez Cruz</li>\n\t\t</ul>\n\t\t</div>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default About;\n","import React from 'react';\n\n/** \n@fileoverview: Footer.js\n@version: 1.0.0\n@author: Miopers\n@copyright: GIL UNAM \n@see: http://www.miopers.unam.mx/covid/#/\n\nHistory: Versón 1.0.0 Verión inical del programa desplegable de Miopers para analisis de \n  tweets COVID19 versión actualmente desplegable.\n\nSummary: Archivo de los programas footer donde nos enfocamos en configurar los 'footer' de la página web (Encabezados\n  y pies de páginas), donde establecemos los estilos y tamaños. \n*/\n\n\nconst footerStyles ={\n  height:'80px',\n  paddingTop:'20px'\n\n}\n\n\n\nclass Footer extends React.Component{\n\n  /**\n    * @overview: Clase principal de los footers que extiende de React.Component, utilizmos los elementos de esta biblioteca\n    * para poder trabajar con la creación de footers dinámicos\n    * @returns: Establecemos los parámetros por default para todos los footers que utiliza la página web. \n  */\n\n  render(){\n    // Encabezado de pie de página donde vienen los datos de información de GIL\n    return(\n      <div style={footerStyles} className='bg-dark text-light text-center'>\n      <p>UNAM, México 2020 </p>\n      </div>\n\n    );\n  }\n\n\n}\n\n// Exportamos los elementos para que puedan ser leidos por el resto de páginas del proyecto\nexport default Footer;","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport {Link} from 'react-router-dom';\n\n\n/** \n@fileoverview: NavBar.js\n@version: 1.0.0\n@author: Miopers\n@copyright: GIL UNAM \n@see: http://www.miopers.unam.mx/covid/#/\n\nHistory: Versón 1.0.0 Verión inical del programa desplegable de Miopers para analisis de \n  tweets COVID19 versión actualmente desplegable.\n\nSummary: El módulo NavBar.js se ejecuta como un módulo de navegación donde se escribe el código necesario para \n  poder transladarse entre los diferentes módulos de la página web i.e Monitor de Síntomas & Analísis de emocines\n  - Con el código escrito en esta sección se puede navegar entre las páginas web dando click\n*/\n\n\n\nclass NavBar extends React.Component{\n  /**\n     * @overview: Clase principal para el cambio y navegación entre los elementos de la página web. \n     *  Se da la orden por médio de click, para la navegación entre difetentes elementos de la pag. web.\n     * @returns: Clase que posee los elementos de movilidad en la página web. \n     */\n  render(){\n\n    return(\n\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        \n        <Navbar.Brand as={Link} to={'/'}>COVID-19 México</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link as={Link} to='/sintomas'>Monitor de síntomas</Nav.Link>\n            <Nav.Link as={Link} to='/emociones'>Análisis de emociones</Nav.Link>\n          </Nav>\n          <Nav>\n            <Nav.Link as={Link} to=\"/about\"> Acerca de </Nav.Link>\n          </Nav>\n          </Navbar.Collapse>\n      </Navbar>\n\n    );\n  }\n\n\n}\n\n\nexport default NavBar;","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport Home from './content/Home';\nimport SentimentAnalysis from './emotions/SentimentAnalysis';\nimport SymptomsMonitor from './symptoms/SymptomsMonitor'\nimport About from './about/About';\nimport Footer from './Footer';\nimport NavBar from './NavBar';\n\n/** \n@fileoverview: App.js\n@version: 1.0.0\n@author: Miopers\n@copyright: GIL UNAM \n@see: http://www.miopers.unam.mx/covid/#/\n\nHistory: Versón 1.0.0 Verión inical del programa desplegable de Miopers para analisis de \n  tweets COVID19 versión actualmente desplegable.\n\nSummary: Página principal de inicio de Miopers, el cual contiene la llamada a los otros componentes de la página web\n  como lo son, Home,SentimentAnalysis, SymptomsMonitor, About. Esta sección de código sirve a manera de referencia el resto\n  de elementos de la página web que conforma MioPers\n*/\n\n\nclass App extends React.PureComponent {\n  /**\n     * @overview: Clase principal que extiende de React.PureComponent, la cual sirve de base para mandar a llamar al resto de páginas, que forman\n     * parte de este proyecto de Miopers web.\n     * @returns: Dejamos todos los elementos listos para poder llamar y tener conectitividad de la página web entre sus elementos.\n     * \n     */\n  render(){\n\n    return (\n      <div>\n      <NavBar/>\n      <Switch>\n          <Route exact path={'/'} component={Home}/>\n          <Route path='/emociones' component={SentimentAnalysis}/>\n          <Route path='/sintomas' component={SymptomsMonitor}/>\n          <Route path='/about' component={About}/>\n      </Switch>\n      <Footer/>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n\n/** \n@fileoverview: serviceWorker.js\n@version: 1.0.0\n@author: Miopers\n@copyright: GIL UNAM \n@see: http://www.miopers.unam.mx/covid/#/\n\nHistory: Versón 1.0.0 Verión inical del programa desplegable de Miopers para analisis de \n  tweets COVID19 versión actualmente desplegable.\n\nSummary: Módulo principal de conección con la información almacenada en Mongo DB Ppara la extracción de datos. \n  Este módulo no realiza la configuración de conexión con Mongo DB. Contiene las configuraciones generales para\n  poder conectarnos y descargar los datos en diferentes tipos de formatos\n*/\n\n\nconst isLocalhost = Boolean(\n  // Módulo de conexión con 'localhost' donde por medio de expresiones regulares buscamos los archivos deseados\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      // Revisión de la conección coon la url pública.\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\n\n\n\nfunction checkValidServiceWorker(swUrl, config) {\n\n  /*\n  @overview: Función que nos permite checar la validación de un usuario por medio de su URL y si es que esta\n    conectado para poder realizar la carga y extracción de datos de los tweets o en caso contrario negar la descarga y \n    avisar al usuario de la incapacidad de conectarse con el host. \n  @returns: Avisa al usuario sobre si es posible conectarse y poder empezar a utilizar la información o de lo contrario si su\n  acceso fue denegado. \n  */\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\n\n\nexport function unregister() {\n  /*\n  @overview: Función que permite al usuario desconectarse del serviceworker e interrumpir con el flujo de analisis de tweets\n  @returns:  Permite el usuario salir del programa y terminar con el fluno de consulta de tweets.\n  */\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\n//Browser Router\nimport {HashRouter} from 'react-router-dom';\n\n/** \n@fileoverview: index.js\n@version: 1.0.0\n@author: Miopers\n@copyright: GIL UNAM \n@see: http://www.miopers.unam.mx/covid/#/\n\nHistory: Versón 1.0.0 Verión inical del programa desplegable de Miopers para analisis de \n  tweets COVID19 versión actualmente desplegable.\n\nSummary: Módulo que funciona como index y que redirecciona elementos que escribimos en App.js de tal manera que\ntengamos movilidad en la página web. \n*/\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter><App /></HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}