{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseDomainOfCategoryAxis = exports.getBandSizeOfAxis = exports.parseSpecifiedDomain = exports.MAX_VALUE_REG = exports.MIN_VALUE_REG = exports.getDomainOfStackGroups = exports.getStackedDataOfItem = exports.getBaseValueOfBar = exports.getCateCoordinateOfBar = exports.getCateCoordinateOfLine = exports.getTicksOfScale = exports.calculateDomainOfTicks = exports.getStackGroupsByAxisId = exports.getStackedData = exports.offsetSign = exports.truncateByDomain = exports.findPositionOfBar = exports.checkDomainOfScale = exports.parseScale = exports.combineEventHandlers = exports.getTicksOfAxis = exports.getCoordinatesOfGrid = exports.isCategorialAxis = exports.getDomainOfItemsWithSameAxis = exports.parseErrorBarsOfAxis = exports.getDomainOfErrorBars = exports.appendOffsetOfLegend = exports.getBarPosition = exports.getBarSizeList = exports.getLegendProps = exports.getMainColorOfGraphicItem = exports.calculateActiveTickIndex = exports.getDomainOfDataByKey = exports.getValueByDataKey = void 0;\n\nvar _isEqual2 = _interopRequireDefault(require(\"lodash/isEqual\"));\n\nvar _sortBy2 = _interopRequireDefault(require(\"lodash/sortBy\"));\n\nvar _isNaN2 = _interopRequireDefault(require(\"lodash/isNaN\"));\n\nvar _isString2 = _interopRequireDefault(require(\"lodash/isString\"));\n\nvar _isArray2 = _interopRequireDefault(require(\"lodash/isArray\"));\n\nvar _max2 = _interopRequireDefault(require(\"lodash/max\"));\n\nvar _min2 = _interopRequireDefault(require(\"lodash/min\"));\n\nvar _flatMap2 = _interopRequireDefault(require(\"lodash/flatMap\"));\n\nvar _isFunction2 = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _get2 = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _isNil2 = _interopRequireDefault(require(\"lodash/isNil\"));\n\nvar _rechartsScale = require(\"recharts-scale\");\n\nvar d3Scales = _interopRequireWildcard(require(\"d3-scale\"));\n\nvar _d3Shape = require(\"d3-shape\");\n\nvar _DataUtils = require(\"./DataUtils\");\n\nvar _ErrorBar = _interopRequireDefault(require(\"../cartesian/ErrorBar\"));\n\nvar _Legend = _interopRequireDefault(require(\"../component/Legend\"));\n\nvar _ReactUtils = require(\"./ReactUtils\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n\n  if (obj != null) {\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar getValueByDataKey = function getValueByDataKey(obj, dataKey, defaultValue) {\n  if ((0, _isNil2[\"default\"])(obj) || (0, _isNil2[\"default\"])(dataKey)) {\n    return defaultValue;\n  }\n\n  if ((0, _DataUtils.isNumOrStr)(dataKey)) {\n    return (0, _get2[\"default\"])(obj, dataKey, defaultValue);\n  }\n\n  if ((0, _isFunction2[\"default\"])(dataKey)) {\n    return dataKey(obj);\n  }\n\n  return defaultValue;\n};\n/**\n * Get domain of data by key\n * @param  {Array}   data      The data displayed in the chart\n * @param  {String}  key       The unique key of a group of data\n * @param  {String}  type      The type of axis\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array} Domain of data\n */\n\n\nexports.getValueByDataKey = getValueByDataKey;\n\nvar getDomainOfDataByKey = function getDomainOfDataByKey(data, key, type, filterNil) {\n  var flattenData = (0, _flatMap2[\"default\"])(data, function (entry) {\n    return getValueByDataKey(entry, key);\n  });\n\n  if (type === 'number') {\n    var domain = flattenData.filter(function (entry) {\n      return (0, _DataUtils.isNumber)(entry) || parseFloat(entry, 10);\n    });\n    return domain.length ? [(0, _min2[\"default\"])(domain), (0, _max2[\"default\"])(domain)] : [Infinity, -Infinity];\n  }\n\n  var validateData = filterNil ? flattenData.filter(function (entry) {\n    return !(0, _isNil2[\"default\"])(entry);\n  }) : flattenData;\n  return validateData.map(function (entry) {\n    return (0, _DataUtils.isNumOrStr)(entry) ? entry : '';\n  });\n};\n\nexports.getDomainOfDataByKey = getDomainOfDataByKey;\n\nvar calculateActiveTickIndex = function calculateActiveTickIndex(coordinate, ticks, unsortedTicks, axis) {\n  var index = -1;\n  var len = ticks.length;\n\n  if (len > 1) {\n    if (axis && axis.axisType === 'angleAxis' && Math.abs(Math.abs(axis.range[1] - axis.range[0]) - 360) <= 1e-6) {\n      var range = axis.range; // ticks are distributed in a circle\n\n      for (var i = 0; i < len; i++) {\n        var before = i > 0 ? unsortedTicks[i - 1].coordinate : unsortedTicks[len - 1].coordinate;\n        var cur = unsortedTicks[i].coordinate;\n        var after = i >= len - 1 ? unsortedTicks[0].coordinate : unsortedTicks[i + 1].coordinate;\n        var sameDirectionCoord = void 0;\n\n        if ((0, _DataUtils.mathSign)(cur - before) !== (0, _DataUtils.mathSign)(after - cur)) {\n          var diffInterval = [];\n\n          if ((0, _DataUtils.mathSign)(after - cur) === (0, _DataUtils.mathSign)(range[1] - range[0])) {\n            sameDirectionCoord = after;\n            var curInRange = cur + range[1] - range[0];\n            diffInterval[0] = Math.min(curInRange, (curInRange + before) / 2);\n            diffInterval[1] = Math.max(curInRange, (curInRange + before) / 2);\n          } else {\n            sameDirectionCoord = before;\n            var afterInRange = after + range[1] - range[0];\n            diffInterval[0] = Math.min(cur, (afterInRange + cur) / 2);\n            diffInterval[1] = Math.max(cur, (afterInRange + cur) / 2);\n          }\n\n          var sameInterval = [Math.min(cur, (sameDirectionCoord + cur) / 2), Math.max(cur, (sameDirectionCoord + cur) / 2)];\n\n          if (coordinate > sameInterval[0] && coordinate <= sameInterval[1] || coordinate >= diffInterval[0] && coordinate <= diffInterval[1]) {\n            index = unsortedTicks[i].index;\n            break;\n          }\n        } else {\n          var min = Math.min(before, after);\n          var max = Math.max(before, after);\n\n          if (coordinate > (min + cur) / 2 && coordinate <= (max + cur) / 2) {\n            index = unsortedTicks[i].index;\n            break;\n          }\n        }\n      }\n    } else {\n      // ticks are distributed in a single direction\n      for (var _i = 0; _i < len; _i++) {\n        if (_i === 0 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i > 0 && _i < len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i === len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2) {\n          index = ticks[_i].index;\n          break;\n        }\n      }\n    }\n  } else {\n    index = 0;\n  }\n\n  return index;\n};\n/**\n * Get the main color of each graphic item\n * @param  {ReactElement} item A graphic item\n * @return {String}            Color\n */\n\n\nexports.calculateActiveTickIndex = calculateActiveTickIndex;\n\nvar getMainColorOfGraphicItem = function getMainColorOfGraphicItem(item) {\n  var displayName = item.type.displayName;\n  var _item$props = item.props,\n      stroke = _item$props.stroke,\n      fill = _item$props.fill;\n  var result;\n\n  switch (displayName) {\n    case 'Line':\n      result = stroke;\n      break;\n\n    case 'Area':\n    case 'Radar':\n      result = stroke && stroke !== 'none' ? stroke : fill;\n      break;\n\n    default:\n      result = fill;\n      break;\n  }\n\n  return result;\n};\n\nexports.getMainColorOfGraphicItem = getMainColorOfGraphicItem;\n\nvar getLegendProps = function getLegendProps(_ref) {\n  var children = _ref.children,\n      formatedGraphicalItems = _ref.formatedGraphicalItems,\n      legendWidth = _ref.legendWidth,\n      legendContent = _ref.legendContent;\n  var legendItem = (0, _ReactUtils.findChildByType)(children, _Legend[\"default\"]);\n\n  if (!legendItem) {\n    return null;\n  }\n\n  var legendData;\n\n  if (legendItem.props && legendItem.props.payload) {\n    legendData = legendItem.props && legendItem.props.payload;\n  } else if (legendContent === 'children') {\n    legendData = (formatedGraphicalItems || []).reduce(function (result, _ref2) {\n      var item = _ref2.item,\n          props = _ref2.props;\n      var data = props.sectors || props.data || [];\n      return result.concat(data.map(function (entry) {\n        return {\n          type: legendItem.props.iconType || item.props.legendType,\n          value: entry.name,\n          color: entry.fill,\n          payload: entry\n        };\n      }));\n    }, []);\n  } else {\n    legendData = (formatedGraphicalItems || []).map(function (_ref3) {\n      var item = _ref3.item;\n      var _item$props2 = item.props,\n          dataKey = _item$props2.dataKey,\n          name = _item$props2.name,\n          legendType = _item$props2.legendType,\n          hide = _item$props2.hide;\n      return {\n        inactive: hide,\n        dataKey: dataKey,\n        type: legendItem.props.iconType || legendType || 'square',\n        color: getMainColorOfGraphicItem(item),\n        value: name || dataKey,\n        payload: item.props\n      };\n    });\n  }\n\n  return _objectSpread({}, legendItem.props, {}, _Legend[\"default\"].getWithHeight(legendItem, legendWidth), {\n    payload: legendData,\n    item: legendItem\n  });\n};\n/**\n * Calculate the size of all groups for stacked bar graph\n * @param  {Object} stackGroups The items grouped by axisId and stackId\n * @return {Object} The size of all groups\n */\n\n\nexports.getLegendProps = getLegendProps;\n\nvar getBarSizeList = function getBarSizeList(_ref4) {\n  var globalSize = _ref4.barSize,\n      _ref4$stackGroups = _ref4.stackGroups,\n      stackGroups = _ref4$stackGroups === void 0 ? {} : _ref4$stackGroups;\n\n  if (!stackGroups) {\n    return {};\n  }\n\n  var result = {};\n  var numericAxisIds = Object.keys(stackGroups);\n\n  for (var i = 0, len = numericAxisIds.length; i < len; i++) {\n    var sgs = stackGroups[numericAxisIds[i]].stackGroups;\n    var stackIds = Object.keys(sgs);\n\n    for (var j = 0, sLen = stackIds.length; j < sLen; j++) {\n      var _sgs$stackIds$j = sgs[stackIds[j]],\n          items = _sgs$stackIds$j.items,\n          cateAxisId = _sgs$stackIds$j.cateAxisId;\n      var barItems = items.filter(function (item) {\n        return (0, _ReactUtils.getDisplayName)(item.type).indexOf('Bar') >= 0;\n      });\n\n      if (barItems && barItems.length) {\n        var selfSize = barItems[0].props.barSize;\n        var cateId = barItems[0].props[cateAxisId];\n\n        if (!result[cateId]) {\n          result[cateId] = [];\n        }\n\n        result[cateId].push({\n          item: barItems[0],\n          stackList: barItems.slice(1),\n          barSize: (0, _isNil2[\"default\"])(selfSize) ? globalSize : selfSize\n        });\n      }\n    }\n  }\n\n  return result;\n};\n/**\n   * Calculate the size of each bar and the gap between two bars\n   * @param  {Number} bandSize  The size of each category\n   * @param  {sizeList} sizeList  The size of all groups\n   * @param  {maxBarSize} maxBarSize The maximum size of bar\n   * @return {Number} The size of each bar and the gap between two bars\n   */\n\n\nexports.getBarSizeList = getBarSizeList;\n\nvar getBarPosition = function getBarPosition(_ref5) {\n  var barGap = _ref5.barGap,\n      barCategoryGap = _ref5.barCategoryGap,\n      bandSize = _ref5.bandSize,\n      _ref5$sizeList = _ref5.sizeList,\n      sizeList = _ref5$sizeList === void 0 ? [] : _ref5$sizeList,\n      maxBarSize = _ref5.maxBarSize;\n  var len = sizeList.length;\n  if (len < 1) return null;\n  var realBarGap = (0, _DataUtils.getPercentValue)(barGap, bandSize, 0, true);\n  var result; // whether or not is barSize setted by user\n\n  if (sizeList[0].barSize === +sizeList[0].barSize) {\n    var useFull = false;\n    var fullBarSize = bandSize / len;\n    var sum = sizeList.reduce(function (res, entry) {\n      return res + entry.barSize || 0;\n    }, 0);\n    sum += (len - 1) * realBarGap;\n\n    if (sum >= bandSize) {\n      sum -= (len - 1) * realBarGap;\n      realBarGap = 0;\n    }\n\n    if (sum >= bandSize && fullBarSize > 0) {\n      useFull = true;\n      fullBarSize *= 0.9;\n      sum = len * fullBarSize;\n    }\n\n    var offset = (bandSize - sum) / 2 >> 0;\n    var prev = {\n      offset: offset - realBarGap,\n      size: 0\n    };\n    result = sizeList.reduce(function (res, entry) {\n      var newRes = [].concat(_toConsumableArray(res), [{\n        item: entry.item,\n        position: {\n          offset: prev.offset + prev.size + realBarGap,\n          size: useFull ? fullBarSize : entry.barSize\n        }\n      }]);\n      prev = newRes[newRes.length - 1].position;\n\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: prev\n          });\n        });\n      }\n\n      return newRes;\n    }, []);\n  } else {\n    var _offset = (0, _DataUtils.getPercentValue)(barCategoryGap, bandSize, 0, true);\n\n    if (bandSize - 2 * _offset - (len - 1) * realBarGap <= 0) {\n      realBarGap = 0;\n    }\n\n    var originalSize = (bandSize - 2 * _offset - (len - 1) * realBarGap) / len;\n\n    if (originalSize > 1) {\n      originalSize >>= 0;\n    }\n\n    var size = maxBarSize === +maxBarSize ? Math.min(originalSize, maxBarSize) : originalSize;\n    result = sizeList.reduce(function (res, entry, i) {\n      var newRes = [].concat(_toConsumableArray(res), [{\n        item: entry.item,\n        position: {\n          offset: _offset + (originalSize + realBarGap) * i + (originalSize - size) / 2,\n          size: size\n        }\n      }]);\n\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: newRes[newRes.length - 1].position\n          });\n        });\n      }\n\n      return newRes;\n    }, []);\n  }\n\n  return result;\n};\n\nexports.getBarPosition = getBarPosition;\n\nvar appendOffsetOfLegend = function appendOffsetOfLegend(offset, items, props, legendBox) {\n  var children = props.children,\n      width = props.width,\n      height = props.height,\n      margin = props.margin;\n  var legendWidth = width - (margin.left || 0) - (margin.right || 0);\n  var legendHeight = height - (margin.top || 0) - (margin.bottom || 0);\n  var legendProps = getLegendProps({\n    children: children,\n    items: items,\n    legendWidth: legendWidth,\n    legendHeight: legendHeight\n  });\n  var newOffset = offset;\n\n  if (legendProps) {\n    var box = legendBox || {};\n    var align = legendProps.align,\n        verticalAlign = legendProps.verticalAlign,\n        layout = legendProps.layout;\n\n    if ((layout === 'vertical' || layout === 'horizontal' && verticalAlign === 'center') && (0, _DataUtils.isNumber)(offset[align])) {\n      newOffset = _objectSpread({}, offset, _defineProperty({}, align, newOffset[align] + (box.width || 0)));\n    }\n\n    if ((layout === 'horizontal' || layout === 'vertical' && align === 'center') && (0, _DataUtils.isNumber)(offset[verticalAlign])) {\n      newOffset = _objectSpread({}, offset, _defineProperty({}, verticalAlign, newOffset[verticalAlign] + (box.height || 0)));\n    }\n  }\n\n  return newOffset;\n};\n\nexports.appendOffsetOfLegend = appendOffsetOfLegend;\n\nvar getDomainOfErrorBars = function getDomainOfErrorBars(data, item, dataKey, axisType) {\n  var children = item.props.children;\n  var errorBars = (0, _ReactUtils.findAllByType)(children, _ErrorBar[\"default\"]).filter(function (errorBarChild) {\n    var direction = errorBarChild.props.direction;\n    return (0, _isNil2[\"default\"])(direction) || (0, _isNil2[\"default\"])(axisType) ? true : axisType.indexOf(direction) >= 0;\n  });\n\n  if (errorBars && errorBars.length) {\n    var keys = errorBars.map(function (errorBarChild) {\n      return errorBarChild.props.dataKey;\n    });\n    return data.reduce(function (result, entry) {\n      var entryValue = getValueByDataKey(entry, dataKey, 0);\n      var mainValue = (0, _isArray2[\"default\"])(entryValue) ? [(0, _min2[\"default\"])(entryValue), (0, _max2[\"default\"])(entryValue)] : [entryValue, entryValue];\n      var errorDomain = keys.reduce(function (prevErrorArr, k) {\n        var errorValue = getValueByDataKey(entry, k, 0);\n        var lowerValue = mainValue[0] - Math.abs((0, _isArray2[\"default\"])(errorValue) ? errorValue[0] : errorValue);\n        var upperValue = mainValue[1] + Math.abs((0, _isArray2[\"default\"])(errorValue) ? errorValue[1] : errorValue);\n        return [Math.min(lowerValue, prevErrorArr[0]), Math.max(upperValue, prevErrorArr[1])];\n      }, [Infinity, -Infinity]);\n      return [Math.min(errorDomain[0], result[0]), Math.max(errorDomain[1], result[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  return null;\n};\n\nexports.getDomainOfErrorBars = getDomainOfErrorBars;\n\nvar parseErrorBarsOfAxis = function parseErrorBarsOfAxis(data, items, dataKey, axisType) {\n  var domains = items.map(function (item) {\n    return getDomainOfErrorBars(data, item, dataKey, axisType);\n  }).filter(function (entry) {\n    return !(0, _isNil2[\"default\"])(entry);\n  });\n\n  if (domains && domains.length) {\n    return domains.reduce(function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  return null;\n};\n/**\n * Get domain of data by the configuration of item element\n * @param  {Array}   data      The data displayed in the chart\n * @param  {Array}   items     The instances of item\n * @param  {String}  type      The type of axis, number - Number Axis, category - Category Axis\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array}        Domain\n */\n\n\nexports.parseErrorBarsOfAxis = parseErrorBarsOfAxis;\n\nvar getDomainOfItemsWithSameAxis = function getDomainOfItemsWithSameAxis(data, items, type, filterNil) {\n  var domains = items.map(function (item) {\n    var dataKey = item.props.dataKey;\n\n    if (type === 'number' && dataKey) {\n      return getDomainOfErrorBars(data, item, dataKey) || getDomainOfDataByKey(data, dataKey, type, filterNil);\n    }\n\n    return getDomainOfDataByKey(data, dataKey, type, filterNil);\n  });\n\n  if (type === 'number') {\n    // Calculate the domain of number axis\n    return domains.reduce(function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  var tag = {}; // Get the union set of category axis\n\n  return domains.reduce(function (result, entry) {\n    for (var i = 0, len = entry.length; i < len; i++) {\n      if (!tag[entry[i]]) {\n        tag[entry[i]] = true;\n        result.push(entry[i]);\n      }\n    }\n\n    return result;\n  }, []);\n};\n\nexports.getDomainOfItemsWithSameAxis = getDomainOfItemsWithSameAxis;\n\nvar isCategorialAxis = function isCategorialAxis(layout, axisType) {\n  return layout === 'horizontal' && axisType === 'xAxis' || layout === 'vertical' && axisType === 'yAxis' || layout === 'centric' && axisType === 'angleAxis' || layout === 'radial' && axisType === 'radiusAxis';\n};\n/**\n * Calculate the Coordinates of grid\n * @param  {Array} ticks The ticks in axis\n * @param {Number} min   The minimun value of axis\n * @param {Number} max   The maximun value of axis\n * @return {Array}       Coordinates\n */\n\n\nexports.isCategorialAxis = isCategorialAxis;\n\nvar getCoordinatesOfGrid = function getCoordinatesOfGrid(ticks, min, max) {\n  var hasMin, hasMax;\n  var values = ticks.map(function (entry) {\n    if (entry.coordinate === min) {\n      hasMin = true;\n    }\n\n    if (entry.coordinate === max) {\n      hasMax = true;\n    }\n\n    return entry.coordinate;\n  });\n\n  if (!hasMin) {\n    values.push(min);\n  }\n\n  if (!hasMax) {\n    values.push(max);\n  }\n\n  return values;\n};\n/**\n * Get the ticks of an axis\n * @param  {Object}  axis The configuration of an axis\n * @param {Boolean} isGrid Whether or not are the ticks in grid\n * @param {Boolean} isAll Return the ticks of all the points or not\n * @return {Array}  Ticks\n */\n\n\nexports.getCoordinatesOfGrid = getCoordinatesOfGrid;\n\nvar getTicksOfAxis = function getTicksOfAxis(axis, isGrid, isAll) {\n  if (!axis) return null;\n  var scale = axis.scale;\n  var duplicateDomain = axis.duplicateDomain,\n      type = axis.type,\n      range = axis.range;\n  var offset = (isGrid || isAll) && type === 'category' && scale.bandwidth ? scale.bandwidth() / 2 : 0;\n  offset = axis.axisType === 'angleAxis' ? (0, _DataUtils.mathSign)(range[0] - range[1]) * 2 * offset : offset; // The ticks setted by user should only affect the ticks adjacent to axis line\n\n  if (isGrid && (axis.ticks || axis.niceTicks)) {\n    return (axis.ticks || axis.niceTicks).map(function (entry) {\n      var scaleContent = duplicateDomain ? duplicateDomain.indexOf(entry) : entry;\n      return {\n        coordinate: scale(scaleContent) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n  }\n\n  if (axis.isCategorial && axis.categoricalDomain) {\n    return axis.categoricalDomain.map(function (entry, index) {\n      return {\n        coordinate: scale(entry),\n        value: entry,\n        index: index,\n        offset: offset\n      };\n    });\n  }\n\n  if (scale.ticks && !isAll) {\n    return scale.ticks(axis.tickCount).map(function (entry) {\n      return {\n        coordinate: scale(entry) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n  } // When axis has duplicated text, serial numbers are used to generate scale\n\n\n  return scale.domain().map(function (entry, index) {\n    return {\n      coordinate: scale(entry) + offset,\n      value: duplicateDomain ? duplicateDomain[entry] : entry,\n      index: index,\n      offset: offset\n    };\n  });\n};\n/**\n * combine the handlers\n * @param  {Function} defaultHandler Internal private handler\n * @param  {Function} parentHandler  Handler function specified in parent component\n * @param  {Function} childHandler   Handler function specified in child component\n * @return {Function}                The combined handler\n */\n\n\nexports.getTicksOfAxis = getTicksOfAxis;\n\nvar combineEventHandlers = function combineEventHandlers(defaultHandler, parentHandler, childHandler) {\n  var customizedHandler;\n\n  if ((0, _isFunction2[\"default\"])(childHandler)) {\n    customizedHandler = childHandler;\n  } else if ((0, _isFunction2[\"default\"])(parentHandler)) {\n    customizedHandler = parentHandler;\n  }\n\n  if ((0, _isFunction2[\"default\"])(defaultHandler) || customizedHandler) {\n    return function (arg1, arg2, arg3, arg4) {\n      if ((0, _isFunction2[\"default\"])(defaultHandler)) {\n        defaultHandler(arg1, arg2, arg3, arg4);\n      }\n\n      if ((0, _isFunction2[\"default\"])(customizedHandler)) {\n        customizedHandler(arg1, arg2, arg3, arg4);\n      }\n    };\n  }\n\n  return null;\n};\n/**\n * Parse the scale function of axis\n * @param  {Object}   axis          The option of axis\n * @param  {String}   chartType     The displayName of chart\n * @return {Function}               The scale funcion\n */\n\n\nexports.combineEventHandlers = combineEventHandlers;\n\nvar parseScale = function parseScale(axis, chartType) {\n  var scale = axis.scale,\n      type = axis.type,\n      layout = axis.layout,\n      axisType = axis.axisType;\n\n  if (scale === 'auto') {\n    if (layout === 'radial' && axisType === 'radiusAxis') {\n      return {\n        scale: d3Scales.scaleBand(),\n        realScaleType: 'band'\n      };\n    }\n\n    if (layout === 'radial' && axisType === 'angleAxis') {\n      return {\n        scale: d3Scales.scaleLinear(),\n        realScaleType: 'linear'\n      };\n    }\n\n    if (type === 'category' && chartType && (chartType.indexOf('LineChart') >= 0 || chartType.indexOf('AreaChart') >= 0)) {\n      return {\n        scale: d3Scales.scalePoint(),\n        realScaleType: 'point'\n      };\n    }\n\n    if (type === 'category') {\n      return {\n        scale: d3Scales.scaleBand(),\n        realScaleType: 'band'\n      };\n    }\n\n    return {\n      scale: d3Scales.scaleLinear(),\n      realScaleType: 'linear'\n    };\n  }\n\n  if ((0, _isString2[\"default\"])(scale)) {\n    var name = \"scale\".concat(scale.slice(0, 1).toUpperCase()).concat(scale.slice(1));\n    return {\n      scale: (d3Scales[name] || d3Scales.scalePoint)(),\n      realScaleType: d3Scales[name] ? name : 'point'\n    };\n  }\n\n  return (0, _isFunction2[\"default\"])(scale) ? {\n    scale: scale\n  } : {\n    scale: d3Scales.scalePoint(),\n    realScaleType: 'point'\n  };\n};\n\nexports.parseScale = parseScale;\nvar EPS = 1e-4;\n\nvar checkDomainOfScale = function checkDomainOfScale(scale) {\n  var domain = scale.domain();\n\n  if (!domain || domain.length <= 2) {\n    return;\n  }\n\n  var len = domain.length;\n  var range = scale.range();\n  var min = Math.min(range[0], range[1]) - EPS;\n  var max = Math.max(range[0], range[1]) + EPS;\n  var first = scale(domain[0]);\n  var last = scale(domain[len - 1]);\n\n  if (first < min || first > max || last < min || last > max) {\n    scale.domain([domain[0], domain[len - 1]]);\n  }\n};\n\nexports.checkDomainOfScale = checkDomainOfScale;\n\nvar findPositionOfBar = function findPositionOfBar(barPosition, child) {\n  if (!barPosition) {\n    return null;\n  }\n\n  for (var i = 0, len = barPosition.length; i < len; i++) {\n    if (barPosition[i].item === child) {\n      return barPosition[i].position;\n    }\n  }\n\n  return null;\n};\n\nexports.findPositionOfBar = findPositionOfBar;\n\nvar truncateByDomain = function truncateByDomain(value, domain) {\n  if (!domain || domain.length !== 2 || !(0, _DataUtils.isNumber)(domain[0]) || !(0, _DataUtils.isNumber)(domain[1])) {\n    return value;\n  }\n\n  var min = Math.min(domain[0], domain[1]);\n  var max = Math.max(domain[0], domain[1]);\n  var result = [value[0], value[1]];\n\n  if (!(0, _DataUtils.isNumber)(value[0]) || value[0] < min) {\n    result[0] = min;\n  }\n\n  if (!(0, _DataUtils.isNumber)(value[1]) || value[1] > max) {\n    result[1] = max;\n  }\n\n  if (result[0] > max) {\n    result[0] = max;\n  }\n\n  if (result[1] < min) {\n    result[1] = min;\n  }\n\n  return result;\n};\n/* eslint no-param-reassign: 0 */\n\n\nexports.truncateByDomain = truncateByDomain;\n\nvar offsetSign = function offsetSign(series) {\n  var n = series.length;\n\n  if (n <= 0) {\n    return;\n  }\n\n  for (var j = 0, m = series[0].length; j < m; ++j) {\n    var positive = 0;\n    var negative = 0;\n\n    for (var i = 0; i < n; ++i) {\n      var value = (0, _isNaN2[\"default\"])(series[i][j][1]) ? series[i][j][0] : series[i][j][1];\n      /* eslint-disable prefer-destructuring */\n\n      if (value >= 0) {\n        series[i][j][0] = positive;\n        series[i][j][1] = positive + value;\n        positive = series[i][j][1];\n      } else {\n        series[i][j][0] = negative;\n        series[i][j][1] = negative + value;\n        negative = series[i][j][1];\n      }\n      /* eslint-enable prefer-destructuring */\n\n    }\n  }\n};\n\nexports.offsetSign = offsetSign;\nvar STACK_OFFSET_MAP = {\n  sign: offsetSign,\n  expand: _d3Shape.stackOffsetExpand,\n  none: _d3Shape.stackOffsetNone,\n  silhouette: _d3Shape.stackOffsetSilhouette,\n  wiggle: _d3Shape.stackOffsetWiggle\n};\n\nvar getStackedData = function getStackedData(data, stackItems, offsetType) {\n  var dataKeys = stackItems.map(function (item) {\n    return item.props.dataKey;\n  });\n  var stack = (0, _d3Shape.stack)().keys(dataKeys).value(function (d, key) {\n    return +getValueByDataKey(d, key, 0);\n  }).order(_d3Shape.stackOrderNone).offset(STACK_OFFSET_MAP[offsetType]);\n  return stack(data);\n};\n\nexports.getStackedData = getStackedData;\n\nvar getStackGroupsByAxisId = function getStackGroupsByAxisId(data, _items, numericAxisId, cateAxisId, offsetType, reverseStackOrder) {\n  if (!data) {\n    return null;\n  } // reversing items to affect render order (for layering)\n\n\n  var items = reverseStackOrder ? _items.reverse() : _items;\n  var stackGroups = items.reduce(function (result, item) {\n    var _item$props3 = item.props,\n        stackId = _item$props3.stackId,\n        hide = _item$props3.hide;\n\n    if (hide) {\n      return result;\n    }\n\n    var axisId = item.props[numericAxisId];\n    var parentGroup = result[axisId] || {\n      hasStack: false,\n      stackGroups: {}\n    };\n\n    if ((0, _DataUtils.isNumOrStr)(stackId)) {\n      var childGroup = parentGroup.stackGroups[stackId] || {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: []\n      };\n      childGroup.items.push(item);\n      parentGroup.hasStack = true;\n      parentGroup.stackGroups[stackId] = childGroup;\n    } else {\n      parentGroup.stackGroups[(0, _DataUtils.uniqueId)('_stackId_')] = {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: [item]\n      };\n    }\n\n    return _objectSpread({}, result, _defineProperty({}, axisId, parentGroup));\n  }, {});\n  return Object.keys(stackGroups).reduce(function (result, axisId) {\n    var group = stackGroups[axisId];\n\n    if (group.hasStack) {\n      group.stackGroups = Object.keys(group.stackGroups).reduce(function (res, stackId) {\n        var g = group.stackGroups[stackId];\n        return _objectSpread({}, res, _defineProperty({}, stackId, {\n          numericAxisId: numericAxisId,\n          cateAxisId: cateAxisId,\n          items: g.items,\n          stackedData: getStackedData(data, g.items, offsetType)\n        }));\n      }, {});\n    }\n\n    return _objectSpread({}, result, _defineProperty({}, axisId, group));\n  }, {});\n};\n/**\n * get domain of ticks\n * @param  {Array} ticks Ticks of axis\n * @param  {String} type  The type of axis\n * @return {Array} domain\n */\n\n\nexports.getStackGroupsByAxisId = getStackGroupsByAxisId;\n\nvar calculateDomainOfTicks = function calculateDomainOfTicks(ticks, type) {\n  if (type === 'number') {\n    return [(0, _min2[\"default\"])(ticks), (0, _max2[\"default\"])(ticks)];\n  }\n\n  return ticks;\n};\n/**\n * Configure the scale function of axis\n * @param {Object} scale The scale function\n * @param {Object} opts  The configuration of axis\n * @return {Object}      null\n */\n\n\nexports.calculateDomainOfTicks = calculateDomainOfTicks;\n\nvar getTicksOfScale = function getTicksOfScale(scale, opts) {\n  var realScaleType = opts.realScaleType,\n      type = opts.type,\n      tickCount = opts.tickCount,\n      originalDomain = opts.originalDomain,\n      allowDecimals = opts.allowDecimals;\n  var scaleType = realScaleType || opts.scale;\n\n  if (scaleType !== 'auto' && scaleType !== 'linear') {\n    return null;\n  }\n\n  if (tickCount && type === 'number' && originalDomain && (originalDomain[0] === 'auto' || originalDomain[1] === 'auto')) {\n    // Calculate the ticks by the number of grid when the axis is a number axis\n    var domain = scale.domain();\n    var tickValues = (0, _rechartsScale.getNiceTickValues)(domain, tickCount, allowDecimals);\n    scale.domain(calculateDomainOfTicks(tickValues, type));\n    return {\n      niceTicks: tickValues\n    };\n  }\n\n  if (tickCount && type === 'number') {\n    var _domain = scale.domain();\n\n    var _tickValues = (0, _rechartsScale.getTickValuesFixedDomain)(_domain, tickCount, allowDecimals);\n\n    return {\n      niceTicks: _tickValues\n    };\n  }\n\n  return null;\n};\n\nexports.getTicksOfScale = getTicksOfScale;\n\nvar getCateCoordinateOfLine = function getCateCoordinateOfLine(_ref6) {\n  var axis = _ref6.axis,\n      ticks = _ref6.ticks,\n      bandSize = _ref6.bandSize,\n      entry = _ref6.entry,\n      index = _ref6.index,\n      dataKey = _ref6.dataKey;\n\n  if (axis.type === 'category') {\n    // find coordinate of category axis by the value of category\n    if (!axis.allowDuplicatedCategory && axis.dataKey && !(0, _isNil2[\"default\"])(entry[axis.dataKey])) {\n      var matchedTick = (0, _DataUtils.findEntryInArray)(ticks, 'value', entry[axis.dataKey]);\n\n      if (matchedTick) {\n        return matchedTick.coordinate + bandSize / 2;\n      }\n    }\n\n    return ticks[index] ? ticks[index].coordinate + bandSize / 2 : null;\n  }\n\n  var value = getValueByDataKey(entry, !(0, _isNil2[\"default\"])(dataKey) ? dataKey : axis.dataKey);\n  return !(0, _isNil2[\"default\"])(value) ? axis.scale(value) : null;\n};\n\nexports.getCateCoordinateOfLine = getCateCoordinateOfLine;\n\nvar getCateCoordinateOfBar = function getCateCoordinateOfBar(_ref7) {\n  var axis = _ref7.axis,\n      ticks = _ref7.ticks,\n      offset = _ref7.offset,\n      bandSize = _ref7.bandSize,\n      entry = _ref7.entry,\n      index = _ref7.index;\n\n  if (axis.type === 'category') {\n    return ticks[index] ? ticks[index].coordinate + offset : null;\n  }\n\n  var value = getValueByDataKey(entry, axis.dataKey, axis.domain[index]);\n  return !(0, _isNil2[\"default\"])(value) ? axis.scale(value) - bandSize / 2 + offset : null;\n};\n\nexports.getCateCoordinateOfBar = getCateCoordinateOfBar;\n\nvar getBaseValueOfBar = function getBaseValueOfBar(_ref8) {\n  var numericAxis = _ref8.numericAxis;\n  var domain = numericAxis.scale.domain();\n\n  if (numericAxis.type === 'number') {\n    var min = Math.min(domain[0], domain[1]);\n    var max = Math.max(domain[0], domain[1]);\n\n    if (min <= 0 && max >= 0) {\n      return 0;\n    }\n\n    if (max < 0) {\n      return max;\n    }\n\n    return min;\n  }\n\n  return domain[0];\n};\n\nexports.getBaseValueOfBar = getBaseValueOfBar;\n\nvar getStackedDataOfItem = function getStackedDataOfItem(item, stackGroups) {\n  var stackId = item.props.stackId;\n\n  if ((0, _DataUtils.isNumOrStr)(stackId)) {\n    var group = stackGroups[stackId];\n\n    if (group && group.items.length) {\n      var itemIndex = -1;\n\n      for (var i = 0, len = group.items.length; i < len; i++) {\n        if (group.items[i] === item) {\n          itemIndex = i;\n          break;\n        }\n      }\n\n      return itemIndex >= 0 ? group.stackedData[itemIndex] : null;\n    }\n  }\n\n  return null;\n};\n\nexports.getStackedDataOfItem = getStackedDataOfItem;\n\nvar getDomainOfSingle = function getDomainOfSingle(data) {\n  return data.reduce(function (result, entry) {\n    return [(0, _min2[\"default\"])(entry.concat([result[0]]).filter(_DataUtils.isNumber)), (0, _max2[\"default\"])(entry.concat([result[1]]).filter(_DataUtils.isNumber))];\n  }, [Infinity, -Infinity]);\n};\n\nvar getDomainOfStackGroups = function getDomainOfStackGroups(stackGroups, startIndex, endIndex) {\n  return Object.keys(stackGroups).reduce(function (result, stackId) {\n    var group = stackGroups[stackId];\n    var stackedData = group.stackedData;\n    var domain = stackedData.reduce(function (res, entry) {\n      var s = getDomainOfSingle(entry.slice(startIndex, endIndex + 1));\n      return [Math.min(res[0], s[0]), Math.max(res[1], s[1])];\n    }, [Infinity, -Infinity]);\n    return [Math.min(domain[0], result[0]), Math.max(domain[1], result[1])];\n  }, [Infinity, -Infinity]).map(function (result) {\n    return result === Infinity || result === -Infinity ? 0 : result;\n  });\n};\n\nexports.getDomainOfStackGroups = getDomainOfStackGroups;\nvar MIN_VALUE_REG = /^dataMin[\\s]*-[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nexports.MIN_VALUE_REG = MIN_VALUE_REG;\nvar MAX_VALUE_REG = /^dataMax[\\s]*\\+[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nexports.MAX_VALUE_REG = MAX_VALUE_REG;\n\nvar parseSpecifiedDomain = function parseSpecifiedDomain(specifiedDomain, dataDomain, allowDataOverflow) {\n  if (!(0, _isArray2[\"default\"])(specifiedDomain)) {\n    return dataDomain;\n  }\n\n  var domain = [];\n  /* eslint-disable prefer-destructuring */\n\n  if ((0, _DataUtils.isNumber)(specifiedDomain[0])) {\n    domain[0] = allowDataOverflow ? specifiedDomain[0] : Math.min(specifiedDomain[0], dataDomain[0]);\n  } else if (MIN_VALUE_REG.test(specifiedDomain[0])) {\n    var value = +MIN_VALUE_REG.exec(specifiedDomain[0])[1];\n    domain[0] = dataDomain[0] - value;\n  } else if ((0, _isFunction2[\"default\"])(specifiedDomain[0])) {\n    domain[0] = specifiedDomain[0](dataDomain[0]);\n  } else {\n    domain[0] = dataDomain[0];\n  }\n\n  if ((0, _DataUtils.isNumber)(specifiedDomain[1])) {\n    domain[1] = allowDataOverflow ? specifiedDomain[1] : Math.max(specifiedDomain[1], dataDomain[1]);\n  } else if (MAX_VALUE_REG.test(specifiedDomain[1])) {\n    var _value = +MAX_VALUE_REG.exec(specifiedDomain[1])[1];\n\n    domain[1] = dataDomain[1] + _value;\n  } else if ((0, _isFunction2[\"default\"])(specifiedDomain[1])) {\n    domain[1] = specifiedDomain[1](dataDomain[1]);\n  } else {\n    domain[1] = dataDomain[1];\n  }\n  /* eslint-enable prefer-destructuring */\n\n\n  return domain;\n};\n/**\n * Calculate the size between two category\n * @param  {Object} axis  The options of axis\n * @param  {Array}  ticks The ticks of axis\n * @return {Number} Size\n */\n\n\nexports.parseSpecifiedDomain = parseSpecifiedDomain;\n\nvar getBandSizeOfAxis = function getBandSizeOfAxis(axis, ticks) {\n  if (axis && axis.scale && axis.scale.bandwidth) {\n    return axis.scale.bandwidth();\n  }\n\n  if (axis && ticks && ticks.length >= 2) {\n    var orderedTicks = (0, _sortBy2[\"default\"])(ticks, function (o) {\n      return o.coordinate;\n    });\n    var bandSize = Infinity;\n\n    for (var i = 1, len = orderedTicks.length; i < len; i++) {\n      var cur = orderedTicks[i];\n      var prev = orderedTicks[i - 1];\n      bandSize = Math.min((cur.coordinate || 0) - (prev.coordinate || 0), bandSize);\n    }\n\n    return bandSize === Infinity ? 0 : bandSize;\n  }\n\n  return 0;\n};\n/**\n * parse the domain of a category axis when a domain is specified\n * @param   {Array}        specifiedDomain  The domain specified by users\n * @param   {Array}        calculatedDomain The domain calculated by dateKey\n * @param   {ReactElement} axisChild        The axis element\n * @returns {Array}        domains\n */\n\n\nexports.getBandSizeOfAxis = getBandSizeOfAxis;\n\nvar parseDomainOfCategoryAxis = function parseDomainOfCategoryAxis(specifiedDomain, calculatedDomain, axisChild) {\n  if (!specifiedDomain || !specifiedDomain.length) {\n    return calculatedDomain;\n  }\n\n  if ((0, _isEqual2[\"default\"])(specifiedDomain, (0, _get2[\"default\"])(axisChild, 'type.defaultProps.domain'))) {\n    return calculatedDomain;\n  }\n\n  return specifiedDomain;\n};\n\nexports.parseDomainOfCategoryAxis = parseDomainOfCategoryAxis;","map":{"version":3,"sources":["/home/adrian/Escritorio/Miopers 2.0/web/node_modules/recharts/lib/util/ChartUtils.js"],"names":["Object","defineProperty","exports","value","parseDomainOfCategoryAxis","getBandSizeOfAxis","parseSpecifiedDomain","MAX_VALUE_REG","MIN_VALUE_REG","getDomainOfStackGroups","getStackedDataOfItem","getBaseValueOfBar","getCateCoordinateOfBar","getCateCoordinateOfLine","getTicksOfScale","calculateDomainOfTicks","getStackGroupsByAxisId","getStackedData","offsetSign","truncateByDomain","findPositionOfBar","checkDomainOfScale","parseScale","combineEventHandlers","getTicksOfAxis","getCoordinatesOfGrid","isCategorialAxis","getDomainOfItemsWithSameAxis","parseErrorBarsOfAxis","getDomainOfErrorBars","appendOffsetOfLegend","getBarPosition","getBarSizeList","getLegendProps","getMainColorOfGraphicItem","calculateActiveTickIndex","getDomainOfDataByKey","getValueByDataKey","_isEqual2","_interopRequireDefault","require","_sortBy2","_isNaN2","_isString2","_isArray2","_max2","_min2","_flatMap2","_isFunction2","_get2","_isNil2","_rechartsScale","d3Scales","_interopRequireWildcard","_d3Shape","_DataUtils","_ErrorBar","_Legend","_ReactUtils","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","toString","Array","from","isArray","i","arr2","length","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","dataKey","defaultValue","isNumOrStr","data","type","filterNil","flattenData","entry","domain","isNumber","parseFloat","Infinity","validateData","map","coordinate","ticks","unsortedTicks","axis","index","len","axisType","Math","abs","range","before","cur","after","sameDirectionCoord","mathSign","diffInterval","curInRange","min","max","afterInRange","sameInterval","_i","item","displayName","_item$props","props","stroke","fill","result","_ref","children","formatedGraphicalItems","legendWidth","legendContent","legendItem","findChildByType","legendData","payload","reduce","_ref2","sectors","concat","iconType","legendType","name","color","_ref3","_item$props2","hide","inactive","getWithHeight","_ref4","globalSize","barSize","_ref4$stackGroups","stackGroups","numericAxisIds","sgs","stackIds","j","sLen","_sgs$stackIds$j","items","cateAxisId","barItems","getDisplayName","indexOf","selfSize","cateId","stackList","slice","_ref5","barGap","barCategoryGap","bandSize","_ref5$sizeList","sizeList","maxBarSize","realBarGap","getPercentValue","useFull","fullBarSize","sum","res","offset","prev","size","newRes","position","_offset","originalSize","legendBox","width","height","margin","left","right","legendHeight","top","bottom","legendProps","newOffset","box","align","verticalAlign","layout","errorBars","findAllByType","errorBarChild","direction","entryValue","mainValue","errorDomain","prevErrorArr","k","errorValue","lowerValue","upperValue","domains","tag","hasMin","hasMax","values","isGrid","isAll","scale","duplicateDomain","bandwidth","niceTicks","scaleContent","isCategorial","categoricalDomain","tickCount","defaultHandler","parentHandler","childHandler","customizedHandler","arg1","arg2","arg3","arg4","chartType","scaleBand","realScaleType","scaleLinear","scalePoint","toUpperCase","EPS","first","last","barPosition","child","series","n","m","positive","negative","STACK_OFFSET_MAP","sign","expand","stackOffsetExpand","none","stackOffsetNone","silhouette","stackOffsetSilhouette","wiggle","stackOffsetWiggle","stackItems","offsetType","dataKeys","stack","d","order","stackOrderNone","_items","numericAxisId","reverseStackOrder","reverse","_item$props3","stackId","axisId","parentGroup","hasStack","childGroup","uniqueId","group","g","stackedData","opts","originalDomain","allowDecimals","scaleType","tickValues","getNiceTickValues","_domain","_tickValues","getTickValuesFixedDomain","_ref6","allowDuplicatedCategory","matchedTick","findEntryInArray","_ref7","_ref8","numericAxis","itemIndex","getDomainOfSingle","startIndex","endIndex","s","specifiedDomain","dataDomain","allowDataOverflow","test","exec","_value","orderedTicks","o","calculatedDomain","axisChild"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseDomainOfCategoryAxis = exports.getBandSizeOfAxis = exports.parseSpecifiedDomain = exports.MAX_VALUE_REG = exports.MIN_VALUE_REG = exports.getDomainOfStackGroups = exports.getStackedDataOfItem = exports.getBaseValueOfBar = exports.getCateCoordinateOfBar = exports.getCateCoordinateOfLine = exports.getTicksOfScale = exports.calculateDomainOfTicks = exports.getStackGroupsByAxisId = exports.getStackedData = exports.offsetSign = exports.truncateByDomain = exports.findPositionOfBar = exports.checkDomainOfScale = exports.parseScale = exports.combineEventHandlers = exports.getTicksOfAxis = exports.getCoordinatesOfGrid = exports.isCategorialAxis = exports.getDomainOfItemsWithSameAxis = exports.parseErrorBarsOfAxis = exports.getDomainOfErrorBars = exports.appendOffsetOfLegend = exports.getBarPosition = exports.getBarSizeList = exports.getLegendProps = exports.getMainColorOfGraphicItem = exports.calculateActiveTickIndex = exports.getDomainOfDataByKey = exports.getValueByDataKey = void 0;\n\nvar _isEqual2 = _interopRequireDefault(require(\"lodash/isEqual\"));\n\nvar _sortBy2 = _interopRequireDefault(require(\"lodash/sortBy\"));\n\nvar _isNaN2 = _interopRequireDefault(require(\"lodash/isNaN\"));\n\nvar _isString2 = _interopRequireDefault(require(\"lodash/isString\"));\n\nvar _isArray2 = _interopRequireDefault(require(\"lodash/isArray\"));\n\nvar _max2 = _interopRequireDefault(require(\"lodash/max\"));\n\nvar _min2 = _interopRequireDefault(require(\"lodash/min\"));\n\nvar _flatMap2 = _interopRequireDefault(require(\"lodash/flatMap\"));\n\nvar _isFunction2 = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _get2 = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _isNil2 = _interopRequireDefault(require(\"lodash/isNil\"));\n\nvar _rechartsScale = require(\"recharts-scale\");\n\nvar d3Scales = _interopRequireWildcard(require(\"d3-scale\"));\n\nvar _d3Shape = require(\"d3-shape\");\n\nvar _DataUtils = require(\"./DataUtils\");\n\nvar _ErrorBar = _interopRequireDefault(require(\"../cartesian/ErrorBar\"));\n\nvar _Legend = _interopRequireDefault(require(\"../component/Legend\"));\n\nvar _ReactUtils = require(\"./ReactUtils\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar getValueByDataKey = function getValueByDataKey(obj, dataKey, defaultValue) {\n  if ((0, _isNil2[\"default\"])(obj) || (0, _isNil2[\"default\"])(dataKey)) {\n    return defaultValue;\n  }\n\n  if ((0, _DataUtils.isNumOrStr)(dataKey)) {\n    return (0, _get2[\"default\"])(obj, dataKey, defaultValue);\n  }\n\n  if ((0, _isFunction2[\"default\"])(dataKey)) {\n    return dataKey(obj);\n  }\n\n  return defaultValue;\n};\n/**\n * Get domain of data by key\n * @param  {Array}   data      The data displayed in the chart\n * @param  {String}  key       The unique key of a group of data\n * @param  {String}  type      The type of axis\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array} Domain of data\n */\n\n\nexports.getValueByDataKey = getValueByDataKey;\n\nvar getDomainOfDataByKey = function getDomainOfDataByKey(data, key, type, filterNil) {\n  var flattenData = (0, _flatMap2[\"default\"])(data, function (entry) {\n    return getValueByDataKey(entry, key);\n  });\n\n  if (type === 'number') {\n    var domain = flattenData.filter(function (entry) {\n      return (0, _DataUtils.isNumber)(entry) || parseFloat(entry, 10);\n    });\n    return domain.length ? [(0, _min2[\"default\"])(domain), (0, _max2[\"default\"])(domain)] : [Infinity, -Infinity];\n  }\n\n  var validateData = filterNil ? flattenData.filter(function (entry) {\n    return !(0, _isNil2[\"default\"])(entry);\n  }) : flattenData;\n  return validateData.map(function (entry) {\n    return (0, _DataUtils.isNumOrStr)(entry) ? entry : '';\n  });\n};\n\nexports.getDomainOfDataByKey = getDomainOfDataByKey;\n\nvar calculateActiveTickIndex = function calculateActiveTickIndex(coordinate, ticks, unsortedTicks, axis) {\n  var index = -1;\n  var len = ticks.length;\n\n  if (len > 1) {\n    if (axis && axis.axisType === 'angleAxis' && Math.abs(Math.abs(axis.range[1] - axis.range[0]) - 360) <= 1e-6) {\n      var range = axis.range; // ticks are distributed in a circle\n\n      for (var i = 0; i < len; i++) {\n        var before = i > 0 ? unsortedTicks[i - 1].coordinate : unsortedTicks[len - 1].coordinate;\n        var cur = unsortedTicks[i].coordinate;\n        var after = i >= len - 1 ? unsortedTicks[0].coordinate : unsortedTicks[i + 1].coordinate;\n        var sameDirectionCoord = void 0;\n\n        if ((0, _DataUtils.mathSign)(cur - before) !== (0, _DataUtils.mathSign)(after - cur)) {\n          var diffInterval = [];\n\n          if ((0, _DataUtils.mathSign)(after - cur) === (0, _DataUtils.mathSign)(range[1] - range[0])) {\n            sameDirectionCoord = after;\n            var curInRange = cur + range[1] - range[0];\n            diffInterval[0] = Math.min(curInRange, (curInRange + before) / 2);\n            diffInterval[1] = Math.max(curInRange, (curInRange + before) / 2);\n          } else {\n            sameDirectionCoord = before;\n            var afterInRange = after + range[1] - range[0];\n            diffInterval[0] = Math.min(cur, (afterInRange + cur) / 2);\n            diffInterval[1] = Math.max(cur, (afterInRange + cur) / 2);\n          }\n\n          var sameInterval = [Math.min(cur, (sameDirectionCoord + cur) / 2), Math.max(cur, (sameDirectionCoord + cur) / 2)];\n\n          if (coordinate > sameInterval[0] && coordinate <= sameInterval[1] || coordinate >= diffInterval[0] && coordinate <= diffInterval[1]) {\n            index = unsortedTicks[i].index;\n            break;\n          }\n        } else {\n          var min = Math.min(before, after);\n          var max = Math.max(before, after);\n\n          if (coordinate > (min + cur) / 2 && coordinate <= (max + cur) / 2) {\n            index = unsortedTicks[i].index;\n            break;\n          }\n        }\n      }\n    } else {\n      // ticks are distributed in a single direction\n      for (var _i = 0; _i < len; _i++) {\n        if (_i === 0 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i > 0 && _i < len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i === len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2) {\n          index = ticks[_i].index;\n          break;\n        }\n      }\n    }\n  } else {\n    index = 0;\n  }\n\n  return index;\n};\n/**\n * Get the main color of each graphic item\n * @param  {ReactElement} item A graphic item\n * @return {String}            Color\n */\n\n\nexports.calculateActiveTickIndex = calculateActiveTickIndex;\n\nvar getMainColorOfGraphicItem = function getMainColorOfGraphicItem(item) {\n  var displayName = item.type.displayName;\n  var _item$props = item.props,\n      stroke = _item$props.stroke,\n      fill = _item$props.fill;\n  var result;\n\n  switch (displayName) {\n    case 'Line':\n      result = stroke;\n      break;\n\n    case 'Area':\n    case 'Radar':\n      result = stroke && stroke !== 'none' ? stroke : fill;\n      break;\n\n    default:\n      result = fill;\n      break;\n  }\n\n  return result;\n};\n\nexports.getMainColorOfGraphicItem = getMainColorOfGraphicItem;\n\nvar getLegendProps = function getLegendProps(_ref) {\n  var children = _ref.children,\n      formatedGraphicalItems = _ref.formatedGraphicalItems,\n      legendWidth = _ref.legendWidth,\n      legendContent = _ref.legendContent;\n  var legendItem = (0, _ReactUtils.findChildByType)(children, _Legend[\"default\"]);\n\n  if (!legendItem) {\n    return null;\n  }\n\n  var legendData;\n\n  if (legendItem.props && legendItem.props.payload) {\n    legendData = legendItem.props && legendItem.props.payload;\n  } else if (legendContent === 'children') {\n    legendData = (formatedGraphicalItems || []).reduce(function (result, _ref2) {\n      var item = _ref2.item,\n          props = _ref2.props;\n      var data = props.sectors || props.data || [];\n      return result.concat(data.map(function (entry) {\n        return {\n          type: legendItem.props.iconType || item.props.legendType,\n          value: entry.name,\n          color: entry.fill,\n          payload: entry\n        };\n      }));\n    }, []);\n  } else {\n    legendData = (formatedGraphicalItems || []).map(function (_ref3) {\n      var item = _ref3.item;\n      var _item$props2 = item.props,\n          dataKey = _item$props2.dataKey,\n          name = _item$props2.name,\n          legendType = _item$props2.legendType,\n          hide = _item$props2.hide;\n      return {\n        inactive: hide,\n        dataKey: dataKey,\n        type: legendItem.props.iconType || legendType || 'square',\n        color: getMainColorOfGraphicItem(item),\n        value: name || dataKey,\n        payload: item.props\n      };\n    });\n  }\n\n  return _objectSpread({}, legendItem.props, {}, _Legend[\"default\"].getWithHeight(legendItem, legendWidth), {\n    payload: legendData,\n    item: legendItem\n  });\n};\n/**\n * Calculate the size of all groups for stacked bar graph\n * @param  {Object} stackGroups The items grouped by axisId and stackId\n * @return {Object} The size of all groups\n */\n\n\nexports.getLegendProps = getLegendProps;\n\nvar getBarSizeList = function getBarSizeList(_ref4) {\n  var globalSize = _ref4.barSize,\n      _ref4$stackGroups = _ref4.stackGroups,\n      stackGroups = _ref4$stackGroups === void 0 ? {} : _ref4$stackGroups;\n\n  if (!stackGroups) {\n    return {};\n  }\n\n  var result = {};\n  var numericAxisIds = Object.keys(stackGroups);\n\n  for (var i = 0, len = numericAxisIds.length; i < len; i++) {\n    var sgs = stackGroups[numericAxisIds[i]].stackGroups;\n    var stackIds = Object.keys(sgs);\n\n    for (var j = 0, sLen = stackIds.length; j < sLen; j++) {\n      var _sgs$stackIds$j = sgs[stackIds[j]],\n          items = _sgs$stackIds$j.items,\n          cateAxisId = _sgs$stackIds$j.cateAxisId;\n      var barItems = items.filter(function (item) {\n        return (0, _ReactUtils.getDisplayName)(item.type).indexOf('Bar') >= 0;\n      });\n\n      if (barItems && barItems.length) {\n        var selfSize = barItems[0].props.barSize;\n        var cateId = barItems[0].props[cateAxisId];\n\n        if (!result[cateId]) {\n          result[cateId] = [];\n        }\n\n        result[cateId].push({\n          item: barItems[0],\n          stackList: barItems.slice(1),\n          barSize: (0, _isNil2[\"default\"])(selfSize) ? globalSize : selfSize\n        });\n      }\n    }\n  }\n\n  return result;\n};\n/**\n   * Calculate the size of each bar and the gap between two bars\n   * @param  {Number} bandSize  The size of each category\n   * @param  {sizeList} sizeList  The size of all groups\n   * @param  {maxBarSize} maxBarSize The maximum size of bar\n   * @return {Number} The size of each bar and the gap between two bars\n   */\n\n\nexports.getBarSizeList = getBarSizeList;\n\nvar getBarPosition = function getBarPosition(_ref5) {\n  var barGap = _ref5.barGap,\n      barCategoryGap = _ref5.barCategoryGap,\n      bandSize = _ref5.bandSize,\n      _ref5$sizeList = _ref5.sizeList,\n      sizeList = _ref5$sizeList === void 0 ? [] : _ref5$sizeList,\n      maxBarSize = _ref5.maxBarSize;\n  var len = sizeList.length;\n  if (len < 1) return null;\n  var realBarGap = (0, _DataUtils.getPercentValue)(barGap, bandSize, 0, true);\n  var result; // whether or not is barSize setted by user\n\n  if (sizeList[0].barSize === +sizeList[0].barSize) {\n    var useFull = false;\n    var fullBarSize = bandSize / len;\n    var sum = sizeList.reduce(function (res, entry) {\n      return res + entry.barSize || 0;\n    }, 0);\n    sum += (len - 1) * realBarGap;\n\n    if (sum >= bandSize) {\n      sum -= (len - 1) * realBarGap;\n      realBarGap = 0;\n    }\n\n    if (sum >= bandSize && fullBarSize > 0) {\n      useFull = true;\n      fullBarSize *= 0.9;\n      sum = len * fullBarSize;\n    }\n\n    var offset = (bandSize - sum) / 2 >> 0;\n    var prev = {\n      offset: offset - realBarGap,\n      size: 0\n    };\n    result = sizeList.reduce(function (res, entry) {\n      var newRes = [].concat(_toConsumableArray(res), [{\n        item: entry.item,\n        position: {\n          offset: prev.offset + prev.size + realBarGap,\n          size: useFull ? fullBarSize : entry.barSize\n        }\n      }]);\n      prev = newRes[newRes.length - 1].position;\n\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: prev\n          });\n        });\n      }\n\n      return newRes;\n    }, []);\n  } else {\n    var _offset = (0, _DataUtils.getPercentValue)(barCategoryGap, bandSize, 0, true);\n\n    if (bandSize - 2 * _offset - (len - 1) * realBarGap <= 0) {\n      realBarGap = 0;\n    }\n\n    var originalSize = (bandSize - 2 * _offset - (len - 1) * realBarGap) / len;\n\n    if (originalSize > 1) {\n      originalSize >>= 0;\n    }\n\n    var size = maxBarSize === +maxBarSize ? Math.min(originalSize, maxBarSize) : originalSize;\n    result = sizeList.reduce(function (res, entry, i) {\n      var newRes = [].concat(_toConsumableArray(res), [{\n        item: entry.item,\n        position: {\n          offset: _offset + (originalSize + realBarGap) * i + (originalSize - size) / 2,\n          size: size\n        }\n      }]);\n\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: newRes[newRes.length - 1].position\n          });\n        });\n      }\n\n      return newRes;\n    }, []);\n  }\n\n  return result;\n};\n\nexports.getBarPosition = getBarPosition;\n\nvar appendOffsetOfLegend = function appendOffsetOfLegend(offset, items, props, legendBox) {\n  var children = props.children,\n      width = props.width,\n      height = props.height,\n      margin = props.margin;\n  var legendWidth = width - (margin.left || 0) - (margin.right || 0);\n  var legendHeight = height - (margin.top || 0) - (margin.bottom || 0);\n  var legendProps = getLegendProps({\n    children: children,\n    items: items,\n    legendWidth: legendWidth,\n    legendHeight: legendHeight\n  });\n  var newOffset = offset;\n\n  if (legendProps) {\n    var box = legendBox || {};\n    var align = legendProps.align,\n        verticalAlign = legendProps.verticalAlign,\n        layout = legendProps.layout;\n\n    if ((layout === 'vertical' || layout === 'horizontal' && verticalAlign === 'center') && (0, _DataUtils.isNumber)(offset[align])) {\n      newOffset = _objectSpread({}, offset, _defineProperty({}, align, newOffset[align] + (box.width || 0)));\n    }\n\n    if ((layout === 'horizontal' || layout === 'vertical' && align === 'center') && (0, _DataUtils.isNumber)(offset[verticalAlign])) {\n      newOffset = _objectSpread({}, offset, _defineProperty({}, verticalAlign, newOffset[verticalAlign] + (box.height || 0)));\n    }\n  }\n\n  return newOffset;\n};\n\nexports.appendOffsetOfLegend = appendOffsetOfLegend;\n\nvar getDomainOfErrorBars = function getDomainOfErrorBars(data, item, dataKey, axisType) {\n  var children = item.props.children;\n  var errorBars = (0, _ReactUtils.findAllByType)(children, _ErrorBar[\"default\"]).filter(function (errorBarChild) {\n    var direction = errorBarChild.props.direction;\n    return (0, _isNil2[\"default\"])(direction) || (0, _isNil2[\"default\"])(axisType) ? true : axisType.indexOf(direction) >= 0;\n  });\n\n  if (errorBars && errorBars.length) {\n    var keys = errorBars.map(function (errorBarChild) {\n      return errorBarChild.props.dataKey;\n    });\n    return data.reduce(function (result, entry) {\n      var entryValue = getValueByDataKey(entry, dataKey, 0);\n      var mainValue = (0, _isArray2[\"default\"])(entryValue) ? [(0, _min2[\"default\"])(entryValue), (0, _max2[\"default\"])(entryValue)] : [entryValue, entryValue];\n      var errorDomain = keys.reduce(function (prevErrorArr, k) {\n        var errorValue = getValueByDataKey(entry, k, 0);\n        var lowerValue = mainValue[0] - Math.abs((0, _isArray2[\"default\"])(errorValue) ? errorValue[0] : errorValue);\n        var upperValue = mainValue[1] + Math.abs((0, _isArray2[\"default\"])(errorValue) ? errorValue[1] : errorValue);\n        return [Math.min(lowerValue, prevErrorArr[0]), Math.max(upperValue, prevErrorArr[1])];\n      }, [Infinity, -Infinity]);\n      return [Math.min(errorDomain[0], result[0]), Math.max(errorDomain[1], result[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  return null;\n};\n\nexports.getDomainOfErrorBars = getDomainOfErrorBars;\n\nvar parseErrorBarsOfAxis = function parseErrorBarsOfAxis(data, items, dataKey, axisType) {\n  var domains = items.map(function (item) {\n    return getDomainOfErrorBars(data, item, dataKey, axisType);\n  }).filter(function (entry) {\n    return !(0, _isNil2[\"default\"])(entry);\n  });\n\n  if (domains && domains.length) {\n    return domains.reduce(function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  return null;\n};\n/**\n * Get domain of data by the configuration of item element\n * @param  {Array}   data      The data displayed in the chart\n * @param  {Array}   items     The instances of item\n * @param  {String}  type      The type of axis, number - Number Axis, category - Category Axis\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array}        Domain\n */\n\n\nexports.parseErrorBarsOfAxis = parseErrorBarsOfAxis;\n\nvar getDomainOfItemsWithSameAxis = function getDomainOfItemsWithSameAxis(data, items, type, filterNil) {\n  var domains = items.map(function (item) {\n    var dataKey = item.props.dataKey;\n\n    if (type === 'number' && dataKey) {\n      return getDomainOfErrorBars(data, item, dataKey) || getDomainOfDataByKey(data, dataKey, type, filterNil);\n    }\n\n    return getDomainOfDataByKey(data, dataKey, type, filterNil);\n  });\n\n  if (type === 'number') {\n    // Calculate the domain of number axis\n    return domains.reduce(function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  var tag = {}; // Get the union set of category axis\n\n  return domains.reduce(function (result, entry) {\n    for (var i = 0, len = entry.length; i < len; i++) {\n      if (!tag[entry[i]]) {\n        tag[entry[i]] = true;\n        result.push(entry[i]);\n      }\n    }\n\n    return result;\n  }, []);\n};\n\nexports.getDomainOfItemsWithSameAxis = getDomainOfItemsWithSameAxis;\n\nvar isCategorialAxis = function isCategorialAxis(layout, axisType) {\n  return layout === 'horizontal' && axisType === 'xAxis' || layout === 'vertical' && axisType === 'yAxis' || layout === 'centric' && axisType === 'angleAxis' || layout === 'radial' && axisType === 'radiusAxis';\n};\n/**\n * Calculate the Coordinates of grid\n * @param  {Array} ticks The ticks in axis\n * @param {Number} min   The minimun value of axis\n * @param {Number} max   The maximun value of axis\n * @return {Array}       Coordinates\n */\n\n\nexports.isCategorialAxis = isCategorialAxis;\n\nvar getCoordinatesOfGrid = function getCoordinatesOfGrid(ticks, min, max) {\n  var hasMin, hasMax;\n  var values = ticks.map(function (entry) {\n    if (entry.coordinate === min) {\n      hasMin = true;\n    }\n\n    if (entry.coordinate === max) {\n      hasMax = true;\n    }\n\n    return entry.coordinate;\n  });\n\n  if (!hasMin) {\n    values.push(min);\n  }\n\n  if (!hasMax) {\n    values.push(max);\n  }\n\n  return values;\n};\n/**\n * Get the ticks of an axis\n * @param  {Object}  axis The configuration of an axis\n * @param {Boolean} isGrid Whether or not are the ticks in grid\n * @param {Boolean} isAll Return the ticks of all the points or not\n * @return {Array}  Ticks\n */\n\n\nexports.getCoordinatesOfGrid = getCoordinatesOfGrid;\n\nvar getTicksOfAxis = function getTicksOfAxis(axis, isGrid, isAll) {\n  if (!axis) return null;\n  var scale = axis.scale;\n  var duplicateDomain = axis.duplicateDomain,\n      type = axis.type,\n      range = axis.range;\n  var offset = (isGrid || isAll) && type === 'category' && scale.bandwidth ? scale.bandwidth() / 2 : 0;\n  offset = axis.axisType === 'angleAxis' ? (0, _DataUtils.mathSign)(range[0] - range[1]) * 2 * offset : offset; // The ticks setted by user should only affect the ticks adjacent to axis line\n\n  if (isGrid && (axis.ticks || axis.niceTicks)) {\n    return (axis.ticks || axis.niceTicks).map(function (entry) {\n      var scaleContent = duplicateDomain ? duplicateDomain.indexOf(entry) : entry;\n      return {\n        coordinate: scale(scaleContent) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n  }\n\n  if (axis.isCategorial && axis.categoricalDomain) {\n    return axis.categoricalDomain.map(function (entry, index) {\n      return {\n        coordinate: scale(entry),\n        value: entry,\n        index: index,\n        offset: offset\n      };\n    });\n  }\n\n  if (scale.ticks && !isAll) {\n    return scale.ticks(axis.tickCount).map(function (entry) {\n      return {\n        coordinate: scale(entry) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n  } // When axis has duplicated text, serial numbers are used to generate scale\n\n\n  return scale.domain().map(function (entry, index) {\n    return {\n      coordinate: scale(entry) + offset,\n      value: duplicateDomain ? duplicateDomain[entry] : entry,\n      index: index,\n      offset: offset\n    };\n  });\n};\n/**\n * combine the handlers\n * @param  {Function} defaultHandler Internal private handler\n * @param  {Function} parentHandler  Handler function specified in parent component\n * @param  {Function} childHandler   Handler function specified in child component\n * @return {Function}                The combined handler\n */\n\n\nexports.getTicksOfAxis = getTicksOfAxis;\n\nvar combineEventHandlers = function combineEventHandlers(defaultHandler, parentHandler, childHandler) {\n  var customizedHandler;\n\n  if ((0, _isFunction2[\"default\"])(childHandler)) {\n    customizedHandler = childHandler;\n  } else if ((0, _isFunction2[\"default\"])(parentHandler)) {\n    customizedHandler = parentHandler;\n  }\n\n  if ((0, _isFunction2[\"default\"])(defaultHandler) || customizedHandler) {\n    return function (arg1, arg2, arg3, arg4) {\n      if ((0, _isFunction2[\"default\"])(defaultHandler)) {\n        defaultHandler(arg1, arg2, arg3, arg4);\n      }\n\n      if ((0, _isFunction2[\"default\"])(customizedHandler)) {\n        customizedHandler(arg1, arg2, arg3, arg4);\n      }\n    };\n  }\n\n  return null;\n};\n/**\n * Parse the scale function of axis\n * @param  {Object}   axis          The option of axis\n * @param  {String}   chartType     The displayName of chart\n * @return {Function}               The scale funcion\n */\n\n\nexports.combineEventHandlers = combineEventHandlers;\n\nvar parseScale = function parseScale(axis, chartType) {\n  var scale = axis.scale,\n      type = axis.type,\n      layout = axis.layout,\n      axisType = axis.axisType;\n\n  if (scale === 'auto') {\n    if (layout === 'radial' && axisType === 'radiusAxis') {\n      return {\n        scale: d3Scales.scaleBand(),\n        realScaleType: 'band'\n      };\n    }\n\n    if (layout === 'radial' && axisType === 'angleAxis') {\n      return {\n        scale: d3Scales.scaleLinear(),\n        realScaleType: 'linear'\n      };\n    }\n\n    if (type === 'category' && chartType && (chartType.indexOf('LineChart') >= 0 || chartType.indexOf('AreaChart') >= 0)) {\n      return {\n        scale: d3Scales.scalePoint(),\n        realScaleType: 'point'\n      };\n    }\n\n    if (type === 'category') {\n      return {\n        scale: d3Scales.scaleBand(),\n        realScaleType: 'band'\n      };\n    }\n\n    return {\n      scale: d3Scales.scaleLinear(),\n      realScaleType: 'linear'\n    };\n  }\n\n  if ((0, _isString2[\"default\"])(scale)) {\n    var name = \"scale\".concat(scale.slice(0, 1).toUpperCase()).concat(scale.slice(1));\n    return {\n      scale: (d3Scales[name] || d3Scales.scalePoint)(),\n      realScaleType: d3Scales[name] ? name : 'point'\n    };\n  }\n\n  return (0, _isFunction2[\"default\"])(scale) ? {\n    scale: scale\n  } : {\n    scale: d3Scales.scalePoint(),\n    realScaleType: 'point'\n  };\n};\n\nexports.parseScale = parseScale;\nvar EPS = 1e-4;\n\nvar checkDomainOfScale = function checkDomainOfScale(scale) {\n  var domain = scale.domain();\n\n  if (!domain || domain.length <= 2) {\n    return;\n  }\n\n  var len = domain.length;\n  var range = scale.range();\n  var min = Math.min(range[0], range[1]) - EPS;\n  var max = Math.max(range[0], range[1]) + EPS;\n  var first = scale(domain[0]);\n  var last = scale(domain[len - 1]);\n\n  if (first < min || first > max || last < min || last > max) {\n    scale.domain([domain[0], domain[len - 1]]);\n  }\n};\n\nexports.checkDomainOfScale = checkDomainOfScale;\n\nvar findPositionOfBar = function findPositionOfBar(barPosition, child) {\n  if (!barPosition) {\n    return null;\n  }\n\n  for (var i = 0, len = barPosition.length; i < len; i++) {\n    if (barPosition[i].item === child) {\n      return barPosition[i].position;\n    }\n  }\n\n  return null;\n};\n\nexports.findPositionOfBar = findPositionOfBar;\n\nvar truncateByDomain = function truncateByDomain(value, domain) {\n  if (!domain || domain.length !== 2 || !(0, _DataUtils.isNumber)(domain[0]) || !(0, _DataUtils.isNumber)(domain[1])) {\n    return value;\n  }\n\n  var min = Math.min(domain[0], domain[1]);\n  var max = Math.max(domain[0], domain[1]);\n  var result = [value[0], value[1]];\n\n  if (!(0, _DataUtils.isNumber)(value[0]) || value[0] < min) {\n    result[0] = min;\n  }\n\n  if (!(0, _DataUtils.isNumber)(value[1]) || value[1] > max) {\n    result[1] = max;\n  }\n\n  if (result[0] > max) {\n    result[0] = max;\n  }\n\n  if (result[1] < min) {\n    result[1] = min;\n  }\n\n  return result;\n};\n/* eslint no-param-reassign: 0 */\n\n\nexports.truncateByDomain = truncateByDomain;\n\nvar offsetSign = function offsetSign(series) {\n  var n = series.length;\n\n  if (n <= 0) {\n    return;\n  }\n\n  for (var j = 0, m = series[0].length; j < m; ++j) {\n    var positive = 0;\n    var negative = 0;\n\n    for (var i = 0; i < n; ++i) {\n      var value = (0, _isNaN2[\"default\"])(series[i][j][1]) ? series[i][j][0] : series[i][j][1];\n      /* eslint-disable prefer-destructuring */\n\n      if (value >= 0) {\n        series[i][j][0] = positive;\n        series[i][j][1] = positive + value;\n        positive = series[i][j][1];\n      } else {\n        series[i][j][0] = negative;\n        series[i][j][1] = negative + value;\n        negative = series[i][j][1];\n      }\n      /* eslint-enable prefer-destructuring */\n\n    }\n  }\n};\n\nexports.offsetSign = offsetSign;\nvar STACK_OFFSET_MAP = {\n  sign: offsetSign,\n  expand: _d3Shape.stackOffsetExpand,\n  none: _d3Shape.stackOffsetNone,\n  silhouette: _d3Shape.stackOffsetSilhouette,\n  wiggle: _d3Shape.stackOffsetWiggle\n};\n\nvar getStackedData = function getStackedData(data, stackItems, offsetType) {\n  var dataKeys = stackItems.map(function (item) {\n    return item.props.dataKey;\n  });\n  var stack = (0, _d3Shape.stack)().keys(dataKeys).value(function (d, key) {\n    return +getValueByDataKey(d, key, 0);\n  }).order(_d3Shape.stackOrderNone).offset(STACK_OFFSET_MAP[offsetType]);\n  return stack(data);\n};\n\nexports.getStackedData = getStackedData;\n\nvar getStackGroupsByAxisId = function getStackGroupsByAxisId(data, _items, numericAxisId, cateAxisId, offsetType, reverseStackOrder) {\n  if (!data) {\n    return null;\n  } // reversing items to affect render order (for layering)\n\n\n  var items = reverseStackOrder ? _items.reverse() : _items;\n  var stackGroups = items.reduce(function (result, item) {\n    var _item$props3 = item.props,\n        stackId = _item$props3.stackId,\n        hide = _item$props3.hide;\n\n    if (hide) {\n      return result;\n    }\n\n    var axisId = item.props[numericAxisId];\n    var parentGroup = result[axisId] || {\n      hasStack: false,\n      stackGroups: {}\n    };\n\n    if ((0, _DataUtils.isNumOrStr)(stackId)) {\n      var childGroup = parentGroup.stackGroups[stackId] || {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: []\n      };\n      childGroup.items.push(item);\n      parentGroup.hasStack = true;\n      parentGroup.stackGroups[stackId] = childGroup;\n    } else {\n      parentGroup.stackGroups[(0, _DataUtils.uniqueId)('_stackId_')] = {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: [item]\n      };\n    }\n\n    return _objectSpread({}, result, _defineProperty({}, axisId, parentGroup));\n  }, {});\n  return Object.keys(stackGroups).reduce(function (result, axisId) {\n    var group = stackGroups[axisId];\n\n    if (group.hasStack) {\n      group.stackGroups = Object.keys(group.stackGroups).reduce(function (res, stackId) {\n        var g = group.stackGroups[stackId];\n        return _objectSpread({}, res, _defineProperty({}, stackId, {\n          numericAxisId: numericAxisId,\n          cateAxisId: cateAxisId,\n          items: g.items,\n          stackedData: getStackedData(data, g.items, offsetType)\n        }));\n      }, {});\n    }\n\n    return _objectSpread({}, result, _defineProperty({}, axisId, group));\n  }, {});\n};\n/**\n * get domain of ticks\n * @param  {Array} ticks Ticks of axis\n * @param  {String} type  The type of axis\n * @return {Array} domain\n */\n\n\nexports.getStackGroupsByAxisId = getStackGroupsByAxisId;\n\nvar calculateDomainOfTicks = function calculateDomainOfTicks(ticks, type) {\n  if (type === 'number') {\n    return [(0, _min2[\"default\"])(ticks), (0, _max2[\"default\"])(ticks)];\n  }\n\n  return ticks;\n};\n/**\n * Configure the scale function of axis\n * @param {Object} scale The scale function\n * @param {Object} opts  The configuration of axis\n * @return {Object}      null\n */\n\n\nexports.calculateDomainOfTicks = calculateDomainOfTicks;\n\nvar getTicksOfScale = function getTicksOfScale(scale, opts) {\n  var realScaleType = opts.realScaleType,\n      type = opts.type,\n      tickCount = opts.tickCount,\n      originalDomain = opts.originalDomain,\n      allowDecimals = opts.allowDecimals;\n  var scaleType = realScaleType || opts.scale;\n\n  if (scaleType !== 'auto' && scaleType !== 'linear') {\n    return null;\n  }\n\n  if (tickCount && type === 'number' && originalDomain && (originalDomain[0] === 'auto' || originalDomain[1] === 'auto')) {\n    // Calculate the ticks by the number of grid when the axis is a number axis\n    var domain = scale.domain();\n    var tickValues = (0, _rechartsScale.getNiceTickValues)(domain, tickCount, allowDecimals);\n    scale.domain(calculateDomainOfTicks(tickValues, type));\n    return {\n      niceTicks: tickValues\n    };\n  }\n\n  if (tickCount && type === 'number') {\n    var _domain = scale.domain();\n\n    var _tickValues = (0, _rechartsScale.getTickValuesFixedDomain)(_domain, tickCount, allowDecimals);\n\n    return {\n      niceTicks: _tickValues\n    };\n  }\n\n  return null;\n};\n\nexports.getTicksOfScale = getTicksOfScale;\n\nvar getCateCoordinateOfLine = function getCateCoordinateOfLine(_ref6) {\n  var axis = _ref6.axis,\n      ticks = _ref6.ticks,\n      bandSize = _ref6.bandSize,\n      entry = _ref6.entry,\n      index = _ref6.index,\n      dataKey = _ref6.dataKey;\n\n  if (axis.type === 'category') {\n    // find coordinate of category axis by the value of category\n    if (!axis.allowDuplicatedCategory && axis.dataKey && !(0, _isNil2[\"default\"])(entry[axis.dataKey])) {\n      var matchedTick = (0, _DataUtils.findEntryInArray)(ticks, 'value', entry[axis.dataKey]);\n\n      if (matchedTick) {\n        return matchedTick.coordinate + bandSize / 2;\n      }\n    }\n\n    return ticks[index] ? ticks[index].coordinate + bandSize / 2 : null;\n  }\n\n  var value = getValueByDataKey(entry, !(0, _isNil2[\"default\"])(dataKey) ? dataKey : axis.dataKey);\n  return !(0, _isNil2[\"default\"])(value) ? axis.scale(value) : null;\n};\n\nexports.getCateCoordinateOfLine = getCateCoordinateOfLine;\n\nvar getCateCoordinateOfBar = function getCateCoordinateOfBar(_ref7) {\n  var axis = _ref7.axis,\n      ticks = _ref7.ticks,\n      offset = _ref7.offset,\n      bandSize = _ref7.bandSize,\n      entry = _ref7.entry,\n      index = _ref7.index;\n\n  if (axis.type === 'category') {\n    return ticks[index] ? ticks[index].coordinate + offset : null;\n  }\n\n  var value = getValueByDataKey(entry, axis.dataKey, axis.domain[index]);\n  return !(0, _isNil2[\"default\"])(value) ? axis.scale(value) - bandSize / 2 + offset : null;\n};\n\nexports.getCateCoordinateOfBar = getCateCoordinateOfBar;\n\nvar getBaseValueOfBar = function getBaseValueOfBar(_ref8) {\n  var numericAxis = _ref8.numericAxis;\n  var domain = numericAxis.scale.domain();\n\n  if (numericAxis.type === 'number') {\n    var min = Math.min(domain[0], domain[1]);\n    var max = Math.max(domain[0], domain[1]);\n\n    if (min <= 0 && max >= 0) {\n      return 0;\n    }\n\n    if (max < 0) {\n      return max;\n    }\n\n    return min;\n  }\n\n  return domain[0];\n};\n\nexports.getBaseValueOfBar = getBaseValueOfBar;\n\nvar getStackedDataOfItem = function getStackedDataOfItem(item, stackGroups) {\n  var stackId = item.props.stackId;\n\n  if ((0, _DataUtils.isNumOrStr)(stackId)) {\n    var group = stackGroups[stackId];\n\n    if (group && group.items.length) {\n      var itemIndex = -1;\n\n      for (var i = 0, len = group.items.length; i < len; i++) {\n        if (group.items[i] === item) {\n          itemIndex = i;\n          break;\n        }\n      }\n\n      return itemIndex >= 0 ? group.stackedData[itemIndex] : null;\n    }\n  }\n\n  return null;\n};\n\nexports.getStackedDataOfItem = getStackedDataOfItem;\n\nvar getDomainOfSingle = function getDomainOfSingle(data) {\n  return data.reduce(function (result, entry) {\n    return [(0, _min2[\"default\"])(entry.concat([result[0]]).filter(_DataUtils.isNumber)), (0, _max2[\"default\"])(entry.concat([result[1]]).filter(_DataUtils.isNumber))];\n  }, [Infinity, -Infinity]);\n};\n\nvar getDomainOfStackGroups = function getDomainOfStackGroups(stackGroups, startIndex, endIndex) {\n  return Object.keys(stackGroups).reduce(function (result, stackId) {\n    var group = stackGroups[stackId];\n    var stackedData = group.stackedData;\n    var domain = stackedData.reduce(function (res, entry) {\n      var s = getDomainOfSingle(entry.slice(startIndex, endIndex + 1));\n      return [Math.min(res[0], s[0]), Math.max(res[1], s[1])];\n    }, [Infinity, -Infinity]);\n    return [Math.min(domain[0], result[0]), Math.max(domain[1], result[1])];\n  }, [Infinity, -Infinity]).map(function (result) {\n    return result === Infinity || result === -Infinity ? 0 : result;\n  });\n};\n\nexports.getDomainOfStackGroups = getDomainOfStackGroups;\nvar MIN_VALUE_REG = /^dataMin[\\s]*-[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nexports.MIN_VALUE_REG = MIN_VALUE_REG;\nvar MAX_VALUE_REG = /^dataMax[\\s]*\\+[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nexports.MAX_VALUE_REG = MAX_VALUE_REG;\n\nvar parseSpecifiedDomain = function parseSpecifiedDomain(specifiedDomain, dataDomain, allowDataOverflow) {\n  if (!(0, _isArray2[\"default\"])(specifiedDomain)) {\n    return dataDomain;\n  }\n\n  var domain = [];\n  /* eslint-disable prefer-destructuring */\n\n  if ((0, _DataUtils.isNumber)(specifiedDomain[0])) {\n    domain[0] = allowDataOverflow ? specifiedDomain[0] : Math.min(specifiedDomain[0], dataDomain[0]);\n  } else if (MIN_VALUE_REG.test(specifiedDomain[0])) {\n    var value = +MIN_VALUE_REG.exec(specifiedDomain[0])[1];\n    domain[0] = dataDomain[0] - value;\n  } else if ((0, _isFunction2[\"default\"])(specifiedDomain[0])) {\n    domain[0] = specifiedDomain[0](dataDomain[0]);\n  } else {\n    domain[0] = dataDomain[0];\n  }\n\n  if ((0, _DataUtils.isNumber)(specifiedDomain[1])) {\n    domain[1] = allowDataOverflow ? specifiedDomain[1] : Math.max(specifiedDomain[1], dataDomain[1]);\n  } else if (MAX_VALUE_REG.test(specifiedDomain[1])) {\n    var _value = +MAX_VALUE_REG.exec(specifiedDomain[1])[1];\n\n    domain[1] = dataDomain[1] + _value;\n  } else if ((0, _isFunction2[\"default\"])(specifiedDomain[1])) {\n    domain[1] = specifiedDomain[1](dataDomain[1]);\n  } else {\n    domain[1] = dataDomain[1];\n  }\n  /* eslint-enable prefer-destructuring */\n\n\n  return domain;\n};\n/**\n * Calculate the size between two category\n * @param  {Object} axis  The options of axis\n * @param  {Array}  ticks The ticks of axis\n * @return {Number} Size\n */\n\n\nexports.parseSpecifiedDomain = parseSpecifiedDomain;\n\nvar getBandSizeOfAxis = function getBandSizeOfAxis(axis, ticks) {\n  if (axis && axis.scale && axis.scale.bandwidth) {\n    return axis.scale.bandwidth();\n  }\n\n  if (axis && ticks && ticks.length >= 2) {\n    var orderedTicks = (0, _sortBy2[\"default\"])(ticks, function (o) {\n      return o.coordinate;\n    });\n    var bandSize = Infinity;\n\n    for (var i = 1, len = orderedTicks.length; i < len; i++) {\n      var cur = orderedTicks[i];\n      var prev = orderedTicks[i - 1];\n      bandSize = Math.min((cur.coordinate || 0) - (prev.coordinate || 0), bandSize);\n    }\n\n    return bandSize === Infinity ? 0 : bandSize;\n  }\n\n  return 0;\n};\n/**\n * parse the domain of a category axis when a domain is specified\n * @param   {Array}        specifiedDomain  The domain specified by users\n * @param   {Array}        calculatedDomain The domain calculated by dateKey\n * @param   {ReactElement} axisChild        The axis element\n * @returns {Array}        domains\n */\n\n\nexports.getBandSizeOfAxis = getBandSizeOfAxis;\n\nvar parseDomainOfCategoryAxis = function parseDomainOfCategoryAxis(specifiedDomain, calculatedDomain, axisChild) {\n  if (!specifiedDomain || !specifiedDomain.length) {\n    return calculatedDomain;\n  }\n\n  if ((0, _isEqual2[\"default\"])(specifiedDomain, (0, _get2[\"default\"])(axisChild, 'type.defaultProps.domain'))) {\n    return calculatedDomain;\n  }\n\n  return specifiedDomain;\n};\n\nexports.parseDomainOfCategoryAxis = parseDomainOfCategoryAxis;"]},"metadata":{},"sourceType":"script"}