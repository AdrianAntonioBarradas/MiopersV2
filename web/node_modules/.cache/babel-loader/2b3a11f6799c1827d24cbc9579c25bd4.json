{"ast":null,"code":"var _jsxFileName = \"/home/adrian/Escritorio/Miopers 2.0/web/src/symptoms/Timeline.js\";\nimport React, { PureComponent } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Sector, ResponsiveContainer, ReferenceLine, Brush } from 'recharts';\nimport axios from 'axios'; // import json from '../data/timeline.json';\n\n/** git \n@fileoverview: Timeline.js\n@version: 1.0.0\n@author: Miopers\n@copyright: GIL UNAM \n@see: http://www.miopers.unam.mx/covid/#/\n\nHistory: Versón 1.0.0 Verión inical del programa desplegable de Miopers para analisis de \n  tweets COVID19 versión actualmente desplegable.\n\nSummary: Script donde se configura el despliegue de la gráfica de sintomás en la sección de linea del\n  tiempo de síntomas COVID vs salud mental de Miopers\n*/\n\nconst styles = {\n  chart: {\n    flex: 1,\n    width: 0\n  },\n  updateDate: {\n    marginBottom: '10px'\n  }\n};\n\nclass Timeline extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: [],\n      time: ''\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://127.0.0.1:8000/api/sintomas/').then(res => {\n      this.setState({\n        data: res.data.data,\n        time: res.data.time,\n        isLoaded: true\n      });\n    }).catch(error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    /**\n     * @overview: Método de lectura de los datos del método anterior y visualización. \n     * Se crea la estructura general de la gráfica o se manda le mensaje de que no puede ser desplegada. \n     * Se despliega el código de la gráfica dinamica de los tweets de los sintomas COVID vs salud mental\n     * @see: http://www.miopers.unam.mx/covid/#/sintomas\n     */\n    const {\n      data,\n      time,\n      error,\n      isLoaded\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 14\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: styles.chart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: styles.updateDate,\n        className: \"d-flex justify-content-center font-weight-lighter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, \"\\xDAltima actualizaci\\xF3n: \", time)), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n        width: \"99%\",\n        height: 400,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(LineChart, {\n        data: data,\n        margin: {\n          top: 5,\n          right: 25,\n          left: 20,\n          bottom: 7\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(XAxis, {\n        dataKey: \"day\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(YAxis, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Legend, {\n        verticalAlign: \"top\",\n        wrapperStyle: {\n          lineHeight: '40px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ReferenceLine, {\n        x: \"2020-04-21\",\n        label: \"Fase 3\",\n        stroke: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ReferenceLine, {\n        x: \"2020-05-31\",\n        label: \"Fin de jornada de sana distancia\",\n        stroke: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ReferenceLine, {\n        x: \"2020-06-29\",\n        label: \"Sem\\xE1foro naranja\",\n        stroke: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Line, {\n        type: \"natural\",\n        dataKey: \"Sintomas mentales\",\n        stroke: \"#9336b5\",\n        strokeWidth: \"1\",\n        animationDuration: 2000,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Line, {\n        type: \"natural\",\n        dataKey: \"Sintomas COVID\",\n        stroke: \"#eb0e63\",\n        strokeWidth: \"1\",\n        animationDuration: 1500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Brush, {\n        dataKey: \"day\",\n        height: 40,\n        stroke: \"#8884d8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }\n\n}\n\nexport default Timeline;","map":{"version":3,"sources":["/home/adrian/Escritorio/Miopers 2.0/web/src/symptoms/Timeline.js"],"names":["React","PureComponent","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Sector","ResponsiveContainer","ReferenceLine","Brush","axios","styles","chart","flex","width","updateDate","marginBottom","Timeline","constructor","props","state","error","isLoaded","data","time","componentDidMount","get","then","res","setState","catch","render","message","top","right","left","bottom","lineHeight"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis,\n  CartesianGrid, Tooltip, Legend, Sector,\n  ResponsiveContainer,ReferenceLine, Brush\n  } from 'recharts';\nimport axios from 'axios';\n  // import json from '../data/timeline.json';\n\n\n/** git \n@fileoverview: Timeline.js\n@version: 1.0.0\n@author: Miopers\n@copyright: GIL UNAM \n@see: http://www.miopers.unam.mx/covid/#/\n\nHistory: Versón 1.0.0 Verión inical del programa desplegable de Miopers para analisis de \n  tweets COVID19 versión actualmente desplegable.\n\nSummary: Script donde se configura el despliegue de la gráfica de sintomás en la sección de linea del\n  tiempo de síntomas COVID vs salud mental de Miopers\n*/\n\nconst styles = {\n  chart:{\n    flex: 1,\n    width: 0\n  },\n  updateDate:{\n    marginBottom:'10px'\n  }\n};\n\n\nclass Timeline extends PureComponent {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: [],\n      time:''\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://127.0.0.1:8000/api/sintomas/')\n        .then(res => {\n          this.setState({ \n            data: res.data.data,\n            time: res.data.time,\n            isLoaded: true \n          });\n        })\n        .catch(error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        });\n  }\n\n  render() {\n    /**\n     * @overview: Método de lectura de los datos del método anterior y visualización. \n     * Se crea la estructura general de la gráfica o se manda le mensaje de que no puede ser desplegada. \n     * Se despliega el código de la gráfica dinamica de los tweets de los sintomas COVID vs salud mental\n     * @see: http://www.miopers.unam.mx/covid/#/sintomas\n     */\n    const {data,time, error, isLoaded } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n\n        <div style={styles.chart} >\n          <div style={styles.updateDate} className='d-flex justify-content-center font-weight-lighter'>\n            <span>Última actualización: {time}</span>\n          </div>\n        <ResponsiveContainer width=\"99%\" height={400}>\n        <LineChart\n          data={data}\n          margin={{\n            top: 5, right: 25, left: 20, bottom: 7,\n          }}\n          >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"day\" />\n          <YAxis />\n          <Tooltip />\n          <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\n          <ReferenceLine x=\"2020-04-21\" label=\"Fase 3\" stroke=\"red\" />\n          <ReferenceLine x=\"2020-05-31\" label=\"Fin de jornada de sana distancia\" stroke=\"red\" />\n          <ReferenceLine x=\"2020-06-29\" label=\"Semáforo naranja\" stroke=\"red\" />\n          <Line type=\"natural\" dataKey=\"Sintomas mentales\" stroke=\"#9336b5\" strokeWidth='1' animationDuration={2000} />\n          <Line type=\"natural\" dataKey=\"Sintomas COVID\" stroke=\"#eb0e63\" strokeWidth='1' animationDuration={1500}/>\n          <Brush dataKey=\"day\" height={40} stroke=\"#8884d8\"  />\n          </LineChart>\n        </ResponsiveContainer>\n        </div>\n      );\n    }\n  }\n}\n\n\nexport default Timeline;\n"]},"metadata":{},"sourceType":"module"}