{"ast":null,"code":"var _jsxFileName = \"/home/adrian/Escritorio/Miopers 2.0/web/src/emotions/TimelinePolarity.js\";\nimport axios from 'axios';\nimport React, { PureComponent } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Sector, ResponsiveContainer, ReferenceLine, Brush, PieChart, Pie } from 'recharts'; // import json from '../data/EmocionesTwitter_X_Estados_X_Tiempo_Polaridad';\n\n/** \n@fileoverview: TimelinePolarity.js\n@version: 1.0.0\n@author: Miopers\n@copyright: GIL UNAM \n@see: http://www.miopers.unam.mx/covid/#/emociones\n\nHistory: Versón 1.0.0 Verión inical del programa desplegable de Miopers para analisis de \n  tweets COVID19 versión actualmente desplegable.\n\nSummary: Script donde se configura el despliegue de la gráfica de polaridad de sentimientos \n  en la página 'Análisis de emociones' de Miopers\n*/\n\nconst styles = {\n  chart: {\n    flex: 1,\n    width: 0\n  },\n  updateDate: {\n    marginBottom: '10px'\n  }\n}; // const data_pie = [\n//   { name: 'Tweets Positivos', value: 6660 },\n//   { name: 'Tweets Negativos', value: 2500 },\n//   { name: 'Tweets Neutros', value: 3000 },\n// ];\n\nconst renderActiveShape = props => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? 'start' : 'end';\n  return /*#__PURE__*/React.createElement(\"g\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"text\", {\n    x: cx,\n    y: cy,\n    dy: 8,\n    textAnchor: \"middle\",\n    fill: fill,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, payload.name), /*#__PURE__*/React.createElement(Sector, {\n    cx: cx,\n    cy: cy,\n    innerRadius: innerRadius,\n    outerRadius: outerRadius,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    fill: fill,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Sector, {\n    cx: cx,\n    cy: cy,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    innerRadius: outerRadius + 6,\n    outerRadius: outerRadius + 10,\n    fill: fill,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: `M${sx},${sy}L${mx},${my}L${ex},${ey}`,\n    stroke: fill,\n    fill: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: ex,\n    cy: ey,\n    r: 2,\n    fill: fill,\n    stroke: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    x: ex + (cos >= 0 ? 1 : -1) * 12,\n    y: ey,\n    textAnchor: textAnchor,\n    fill: \"#333\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, `PV ${value}`), /*#__PURE__*/React.createElement(\"text\", {\n    x: ex + (cos >= 0 ? 1 : -1) * 12,\n    y: ey,\n    dy: 18,\n    textAnchor: textAnchor,\n    fill: \"#999\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, `(Rate ${(percent * 100).toFixed(2)}%)`));\n};\n\nclass Timeline extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeIndex: 0\n    };\n\n    this.onPieEnter = (_, index) => {\n      this.setState({\n        activeIndex: index\n      });\n    };\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: [],\n      time: ''\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:8000/api/sentimientosPolaridad').then(res => {\n      this.setState({\n        data: res.data.data,\n        time: res.data.time,\n        isLoaded: true\n      });\n    }).catch(error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n    axios.get('http://localhost:8000/api/sintomaspie/').then(res => {\n      this.setState({\n        data_pie: res.data_pie,\n        isLoaded: true\n      });\n    }).catch(error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    /**\n     * @overview: Método de lectura de los datos del método anterior y visualización. \n     * Se crea la estructura general de la gráfica o se manda le mensaje de que no puede ser desplegada. \n     * Se despliega el código de la gráfica dinamica de las polaridades de emociones de la sección: 'Análisis de emociones'\n     * O en caso contrario se de información de que no se puede cargar.\n     * @see: http://www.miopers.unam.mx/covid/#/emociones\n     */\n    const {\n      data,\n      time,\n      data_pie\n    } = this.state;\n    console.log(data_pie);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.chart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.updateDate,\n      className: \"d-flex justify-content-center font-weight-lighter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, \"\\xDAltima actualizaci\\xF3n: \", time)), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      width: \"99%\",\n      height: 400,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LineChart, {\n      data: data,\n      margin: {\n        top: 5,\n        right: 20,\n        left: 20,\n        bottom: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      verticalAlign: \"top\",\n      wrapperStyle: {\n        lineHeight: '40px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ReferenceLine, {\n      x: \"2020-04-21\",\n      label: \"Fase 3\",\n      stroke: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ReferenceLine, {\n      x: \"2020-05-31\",\n      label: \"Fin de jornada de sana distancia\",\n      stroke: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"natural\",\n      dataKey: \"Tweets_Negativo\",\n      stroke: \"#c338f5\",\n      strokeWidth: \"1\",\n      animationDuration: 2000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"natural\",\n      dataKey: \"Tweets_Positivo\",\n      stroke: \"#433bdb\",\n      strokeWidth: \"1\",\n      animationDuration: 2500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"natural\",\n      dataKey: \"Tweets_Neutro\",\n      stroke: \"#888888\",\n      strokeWidth: \"1\",\n      animationDuration: 3000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Brush, {\n      dataKey: \"day\",\n      height: 40,\n      stroke: \"#8884d8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 5\n      }\n    }))), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n      width: \"99%\",\n      height: 400,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(PieChart, {\n      width: 400,\n      height: 400,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Pie, {\n      activeIndex: this.state.activeIndex,\n      activeShape: renderActiveShape,\n      data: data_pie,\n      cx: \"50%\",\n      cy: \"50%\",\n      innerRadius: 80,\n      outerRadius: 100,\n      fill: \"#8884d8\",\n      dataKey: \"value\",\n      onMouseEnter: this.onPieEnter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default Timeline;","map":{"version":3,"sources":["/home/adrian/Escritorio/Miopers 2.0/web/src/emotions/TimelinePolarity.js"],"names":["axios","React","PureComponent","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Sector","ResponsiveContainer","ReferenceLine","Brush","PieChart","Pie","styles","chart","flex","width","updateDate","marginBottom","renderActiveShape","props","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","value","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","name","toFixed","Timeline","constructor","state","activeIndex","onPieEnter","_","index","setState","error","isLoaded","data","time","componentDidMount","get","then","res","catch","data_pie","render","console","log","top","right","left","bottom","lineHeight"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { PureComponent } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis,\n  CartesianGrid, Tooltip, Legend, Sector,\n  ResponsiveContainer,ReferenceLine, Brush, PieChart, Pie\n  } from 'recharts';\n// import json from '../data/EmocionesTwitter_X_Estados_X_Tiempo_Polaridad';\n\n/** \n@fileoverview: TimelinePolarity.js\n@version: 1.0.0\n@author: Miopers\n@copyright: GIL UNAM \n@see: http://www.miopers.unam.mx/covid/#/emociones\n\nHistory: Versón 1.0.0 Verión inical del programa desplegable de Miopers para analisis de \n  tweets COVID19 versión actualmente desplegable.\n\nSummary: Script donde se configura el despliegue de la gráfica de polaridad de sentimientos \n  en la página 'Análisis de emociones' de Miopers\n*/\n\nconst styles = {\n  chart:{\n    flex: 1,\n    width: 0\n  },\n  updateDate:{\n    marginBottom:'10px'\n  }\n};\n\n\n\n// const data_pie = [\n//   { name: 'Tweets Positivos', value: 6660 },\n//   { name: 'Tweets Negativos', value: 2500 },\n//   { name: 'Tweets Neutros', value: 3000 },\n  \n// ];\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle, fill, payload, percent, value } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n\n  \n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? 'start' : 'end';\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n        {payload.name}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`PV ${value}`}</text>\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\n        {`(Rate ${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n};\n\nclass Timeline extends PureComponent {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: [],\n      time:''\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:8000/api/sentimientosPolaridad')\n        .then(res => {\n          this.setState({ \n            data: res.data.data,\n            time: res.data.time,\n            isLoaded: true \n          });\n        })\n        .catch(error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        });\n        axios.get('http://localhost:8000/api/sintomaspie/')\n        .then(res => {\n          this.setState({ \n            data_pie: res.data_pie,\n            isLoaded: true \n          });\n        })\n        .catch(error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        });\n  }\n\nstate = {\n    activeIndex: 0,\n  };\n\n  onPieEnter = (_, index) => {\n    this.setState({\n      activeIndex: index,\n    });\n  };\n\n  render() {\n    /**\n     * @overview: Método de lectura de los datos del método anterior y visualización. \n     * Se crea la estructura general de la gráfica o se manda le mensaje de que no puede ser desplegada. \n     * Se despliega el código de la gráfica dinamica de las polaridades de emociones de la sección: 'Análisis de emociones'\n     * O en caso contrario se de información de que no se puede cargar.\n     * @see: http://www.miopers.unam.mx/covid/#/emociones\n     */\n    const {data, time ,data_pie} = this.state;\n    console.log(data_pie);\n      return (\n\n        <div style={styles.chart} >\n          <div style={styles.updateDate} className='d-flex justify-content-center font-weight-lighter'>\n            <span>Última actualización: {time}</span>\n          </div>\n        <ResponsiveContainer width=\"99%\" height={400}>\n        <LineChart\n          data={data}\n          margin={{\n            top: 5, right: 20, left: 20, bottom: 5,\n          }}\n          >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"day\" />\n          <YAxis />\n          <Tooltip />\n          <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\n          <ReferenceLine x=\"2020-04-21\" label=\"Fase 3\" stroke=\"red\" />\n          <ReferenceLine x=\"2020-05-31\" label=\"Fin de jornada de sana distancia\" stroke=\"red\" />\n          <Line type=\"natural\" dataKey=\"Tweets_Negativo\" stroke=\"#c338f5\" strokeWidth='1' animationDuration={2000}/>\n          <Line type=\"natural\" dataKey=\"Tweets_Positivo\" stroke=\"#433bdb\" strokeWidth='1' animationDuration={2500}/>\n          <Line type=\"natural\" dataKey=\"Tweets_Neutro\" stroke=\"#888888\" strokeWidth='1' animationDuration={3000} />\n    <Brush dataKey=\"day\" height={40} stroke=\"#8884d8\"  />\n    </LineChart>\n        </ResponsiveContainer>\n\n\t<ResponsiveContainer width=\"99%\" height={400}>\n        <PieChart width={400} height={400}>\n          <Pie\n            activeIndex={this.state.activeIndex}\n            activeShape={renderActiveShape}\n            data={data_pie}\n            cx=\"50%\"\n            cy=\"50%\"\n            innerRadius={80}\n            outerRadius={100}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n            onMouseEnter={this.onPieEnter}\n          />\n        </PieChart>\n        </ResponsiveContainer>\n\n        </div>\n\n\n\n      );\n\n\n\n  }\n}\n\n\nexport default Timeline;\n"]},"metadata":{},"sourceType":"module"}