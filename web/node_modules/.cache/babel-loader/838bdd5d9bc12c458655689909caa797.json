{"ast":null,"code":"var _jsxFileName = \"/home/adrian/Escritorio/Miopers 2.0/web/src/content/Timeline.js\";\nimport React, { Component, PureComponent } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Brush, Legend, AreaChart, Area, ResponsiveContainer, ReferenceLine, ReferenceArea } from 'recharts';\nimport ReferenceDot from 'recharts/lib/cartesian/ReferenceDot';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react'; // import  json from '../data/timeline_result';\n\n/** \n@fileoverview: Timeline.js\n@version: 1.0.0\n@author: Miopers\n@copyright: GIL UNAM \n@see: http://www.miopers.unam.mx/covid/#/\n\nHistory: Versón 1.0.0 Verión inical del programa desplegable de Miopers para analisis de \n  tweets COVID19 versión actualmente desplegable.\n\nSummary: Script donde se configura el despliegue de la gráfica de palabras clave en la sección de linea del\n  tiempo de palabras clave en la página COVID-19 México de Miopers\n*/\n// Constantes de bordes y forma del gráfico\n\nconst styles = {\n  chart: {\n    flex: 1,\n    width: 0\n  },\n  updateDate: {\n    marginBottom: '10px'\n  }\n}; // Ejemplo customatizado de referencia con dot Reference.\n\nconst CustomReferenceDotOrange = props => {\n  return /*#__PURE__*/React.createElement(\"circle\", {\n    cx: props.cx,\n    r: \"5\",\n    cy: props.cy,\n    fill: \"#e65100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"r\",\n    from: \"8\",\n    to: \"15\",\n    dur: \"1.5s\",\n    begin: \"0s\",\n    repeatCount: \"indefinite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n};\n\nclass Timeline extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: [],\n      time: ''\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:8000/api/timeline').then(res => {\n      this.setState({\n        data: res.data.data,\n        time: res.data.time,\n        isLoaded: true\n      });\n    }).catch(error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    /**\n    * @overview: Método de lectura de los datos del método anterior y visualización. \n    * Se crea la estructura general de la gráfica o se manda le mensaje de que no puede ser desplegada. \n    * Se despliega el código de la gráfica dinamica de los tweets de las palabras claves seleccionadas.\n    * @see: http://www.miopers.unam.mx/covid/#/\n    */\n    const {\n      data,\n      time,\n      error,\n      isLoaded\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 16\n        }\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 16\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: styles.updateDate,\n        className: \"d-flex justify-content-center font-weight-lighter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }\n      }, \"\\xDAltima actualizaci\\xF3n: \", time)), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(LineChart, {\n        data: data,\n        margin: {\n          top: 5,\n          right: 25,\n          left: 20,\n          bottom: 7\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(XAxis, {\n        dataKey: \"day\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(YAxis, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Tooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Legend, {\n        verticalAlign: \"top\",\n        wrapperStyle: {\n          lineHeight: '40px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ReferenceLine, {\n        x: \"2020-05-31\",\n        label: \"Fin de jornada de sana distancia\",\n        stroke: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ReferenceDot, {\n        x: \"2020-07-26\",\n        y: 600,\n        label: \"Semaforo\",\n        shape: CustomReferenceDotOrange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ReferenceDot, {\n        x: \"2020-04-21\",\n        y: 200,\n        label: \"Fase 3\",\n        stroke: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ReferenceDot, {\n        x: \"2021-05-13\",\n        y: 200,\n        label: \"Inicio Vacunaci\\xF3n\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ReferenceDot, {\n        x: \"2020-06-16\",\n        y: 200,\n        label: \"Segunda ola contagios\",\n        stroke: \"blue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ReferenceDot, {\n        x: \"2020-05-07\",\n        y: 350,\n        label: \"Segundo confinamiento\",\n        stroke: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"coronavirus\",\n        stroke: \"#00e676\",\n        strokeWidth: \"1\",\n        animationDuration: 4000,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"quedateencasa\",\n        stroke: \"#1b5e20\",\n        strokeWidth: \"1\",\n        animationDuration: 3500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Line, {\n        type: \"monotone\",\n        dataKey: \"covid19\",\n        stroke: \"#e65100\",\n        strokeWidth: \"1\",\n        animationDuration: 1500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Line, {\n        type: \"natural\",\n        dataKey: \"@HLGatell\",\n        stroke: \"#f44336\",\n        strokeWidth: \"1\",\n        animationDuration: 3000,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Line, {\n        type: \"natural\",\n        dataKey: \"@lopezobrador_\",\n        stroke: \"#b71c1c\",\n        strokeWidth: \"1\",\n        animationDuration: 2500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Line, {\n        type: \"natural\",\n        dataKey: \"SusanaDistancia\",\n        stroke: \"#ffab00\",\n        strokeWidth: \"1\",\n        animationDuration: 2000,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Brush, {\n        dataKey: \"day\",\n        height: 40,\n        stroke: \"#8884d8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }))));\n    }\n  }\n\n}\n\nexport default Timeline;","map":{"version":3,"sources":["/home/adrian/Escritorio/Miopers 2.0/web/src/content/Timeline.js"],"names":["React","Component","PureComponent","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Brush","Legend","AreaChart","Area","ResponsiveContainer","ReferenceLine","ReferenceArea","ReferenceDot","axios","useState","useEffect","styles","chart","flex","width","updateDate","marginBottom","CustomReferenceDotOrange","props","cx","cy","Timeline","constructor","state","error","isLoaded","data","time","componentDidMount","get","then","res","setState","catch","render","message","top","right","left","bottom","lineHeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,OAAhD;AACA,SACEC,SADF,EACaC,IADb,EACmBC,KADnB,EAC0BC,KAD1B,EAEEC,aAFF,EAEiBC,OAFjB,EAE0BC,KAF1B,EAEgCC,MAFhC,EAEwCC,SAFxC,EAEmDC,IAFnD,EAGEC,mBAHF,EAGsBC,aAHtB,EAGqCC,aAHrC,QAIS,UAJT;AAKA,OAAOC,YAAP,MAAyB,qCAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC,C,CACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAC;AACJC,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,KAAK,EAAE;AAFH,GADO;AAKbC,EAAAA,UAAU,EAAC;AACTC,IAAAA,YAAY,EAAC;AADJ;AALE,CAAf,C,CAaA;;AACA,MAAMC,wBAAwB,GAAGC,KAAK,IAAI;AACxC,sBACE;AAAQ,IAAA,EAAE,EAAEA,KAAK,CAACC,EAAlB;AAAsB,IAAA,CAAC,EAAC,GAAxB;AAA4B,IAAA,EAAE,EAAED,KAAK,CAACE,EAAtC;AAA0C,IAAA,IAAI,EAAC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,aAAa,EAAC,GADhB;AAEE,IAAA,IAAI,EAAC,GAFP;AAGE,IAAA,EAAE,EAAC,IAHL;AAIE,IAAA,GAAG,EAAC,MAJN;AAKE,IAAA,KAAK,EAAC,IALR;AAME,IAAA,WAAW,EAAC,YANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAYD,CAbD;;AAgBA,MAAMC,QAAN,SAAuB5B,aAAvB,CAAqC;AAEnC6B,EAAAA,WAAW,CAACJ,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKK,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,IAAI,EAAE,EAHK;AAIXC,MAAAA,IAAI,EAAC;AAJM,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBpB,IAAAA,KAAK,CAACqB,GAAN,CAAU,oCAAV,EACKC,IADL,CACUC,GAAG,IAAI;AACX,WAAKC,QAAL,CAAc;AACZN,QAAAA,IAAI,EAAEK,GAAG,CAACL,IAAJ,CAASA,IADH;AAEZC,QAAAA,IAAI,EAAEI,GAAG,CAACL,IAAJ,CAASC,IAFH;AAGZF,QAAAA,QAAQ,EAAE;AAHE,OAAd;AAKD,KAPL,EAQKQ,KARL,CAQWT,KAAK,IAAI;AACd,WAAKQ,QAAL,CAAc;AACZP,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAbL;AAcD;;AAICU,EAAAA,MAAM,GAAG;AACP;AACN;AACA;AACA;AACA;AACA;AACM,UAAM;AAAER,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcH,MAAAA,KAAd;AAAqBC,MAAAA;AAArB,QAAkC,KAAKF,KAA7C;;AACA,QAAIC,KAAJ,EAAW;AACT,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACW,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI,CAACV,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,KAAK,EAAEd,MAAM,CAACI,UAAnB;AAA+B,QAAA,SAAS,EAAC,mDAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAA6BY,IAA7B,CADF,CADF,eAIE,oBAAC,mBAAD;AAAqB,QAAA,KAAK,EAAC,MAA3B;AAAkC,QAAA,MAAM,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AACE,QAAA,IAAI,EAAED,IADR;AAEE,QAAA,MAAM,EAAE;AACRU,UAAAA,GAAG,EAAE,CADG;AACAC,UAAAA,KAAK,EAAE,EADP;AACWC,UAAAA,IAAI,EAAE,EADjB;AACqBC,UAAAA,MAAM,EAAE;AAD7B,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE,oBAAC,aAAD;AAAe,QAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,eAME,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,eAOE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,eAQE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,eASE,oBAAC,MAAD;AAAQ,QAAA,aAAa,EAAC,KAAtB;AAA4B,QAAA,YAAY,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,eAUE,oBAAC,aAAD;AAAe,QAAA,CAAC,EAAC,YAAjB;AAA8B,QAAA,KAAK,EAAC,kCAApC;AAAuE,QAAA,MAAM,EAAC,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,eAWE,oBAAC,YAAD;AAAc,QAAA,CAAC,EAAC,YAAhB;AAA6B,QAAA,CAAC,EAAE,GAAhC;AAAqC,QAAA,KAAK,EAAC,UAA3C;AAAsD,QAAA,KAAK,EAAEvB,wBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,eAYE,oBAAC,YAAD;AAAc,QAAA,CAAC,EAAC,YAAhB;AAA6B,QAAA,CAAC,EAAE,GAAhC;AAAqC,QAAA,KAAK,EAAC,QAA3C;AAAoD,QAAA,MAAM,EAAC,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,eAaE,oBAAC,YAAD;AAAc,QAAA,CAAC,EAAC,YAAhB;AAA6B,QAAA,CAAC,EAAE,GAAhC;AAAqC,QAAA,KAAK,EAAC,sBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,eAcE,oBAAC,YAAD;AAAc,QAAA,CAAC,EAAC,YAAhB;AAA6B,QAAA,CAAC,EAAE,GAAhC;AAAqC,QAAA,KAAK,EAAC,uBAA3C;AAAmE,QAAA,MAAM,EAAC,MAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,eAeE,oBAAC,YAAD;AAAc,QAAA,CAAC,EAAC,YAAhB;AAA6B,QAAA,CAAC,EAAE,GAAhC;AAAqC,QAAA,KAAK,EAAC,uBAA3C;AAAmE,QAAA,MAAM,EAAC,KAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,eAgBE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,aAA9B;AAA4C,QAAA,MAAM,EAAC,SAAnD;AAA6D,QAAA,WAAW,EAAC,GAAzE;AAA6E,QAAA,iBAAiB,EAAE,IAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBF,eAiBE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,eAA9B;AAA8C,QAAA,MAAM,EAAC,SAArD;AAA+D,QAAA,WAAW,EAAC,GAA3E;AAA+E,QAAA,iBAAiB,EAAE,IAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBF,eAkBE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC,SAA9B;AAAwC,QAAA,MAAM,EAAC,SAA/C;AAAyD,QAAA,WAAW,EAAC,GAArE;AAAyE,QAAA,iBAAiB,EAAE,IAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBF,eAmBE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAqB,QAAA,OAAO,EAAC,WAA7B;AAAyC,QAAA,MAAM,EAAC,SAAhD;AAA0D,QAAA,WAAW,EAAC,GAAtE;AAA0E,QAAA,iBAAiB,EAAE,IAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,eAoBE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAqB,QAAA,OAAO,EAAC,gBAA7B;AAA8C,QAAA,MAAM,EAAC,SAArD;AAA+D,QAAA,WAAW,EAAC,GAA3E;AAA+E,QAAA,iBAAiB,EAAE,IAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBF,eAqBE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAqB,QAAA,OAAO,EAAC,iBAA7B;AAA+C,QAAA,MAAM,EAAC,SAAtD;AAAgE,QAAA,WAAW,EAAC,GAA5E;AAAgF,QAAA,iBAAiB,EAAE,IAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBF,eAsBE,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,KAAf;AAAqB,QAAA,MAAM,EAAE,EAA7B;AAAiC,QAAA,MAAM,EAAC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBF,CADF,CAJF,CADF;AAiCD;AACF;;AA9EgC;;AAoFrC,eAAeI,QAAf","sourcesContent":["import React, { Component, PureComponent } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis,\n  CartesianGrid, Tooltip, Brush,Legend, AreaChart, Area,\n  ResponsiveContainer,ReferenceLine, ReferenceArea\n  } from 'recharts';\nimport ReferenceDot from 'recharts/lib/cartesian/ReferenceDot';\n\nimport axios from 'axios';\nimport {useState, useEffect} from 'react';\n// import  json from '../data/timeline_result';\n\n/** \n@fileoverview: Timeline.js\n@version: 1.0.0\n@author: Miopers\n@copyright: GIL UNAM \n@see: http://www.miopers.unam.mx/covid/#/\n\nHistory: Versón 1.0.0 Verión inical del programa desplegable de Miopers para analisis de \n  tweets COVID19 versión actualmente desplegable.\n\nSummary: Script donde se configura el despliegue de la gráfica de palabras clave en la sección de linea del\n  tiempo de palabras clave en la página COVID-19 México de Miopers\n*/\n\n\n// Constantes de bordes y forma del gráfico\nconst styles = {\n  chart:{\n    flex: 1,\n    width: 0\n  },\n  updateDate:{\n    marginBottom:'10px'\n  }\n};\n\n\n\n\n// Ejemplo customatizado de referencia con dot Reference.\nconst CustomReferenceDotOrange = props => {\n  return (\n    <circle cx={props.cx} r=\"5\" cy={props.cy} fill=\"#e65100\">\n      <animate\n        attributeName=\"r\"\n        from=\"8\"\n        to=\"15\"\n        dur=\"1.5s\"\n        begin=\"0s\"\n        repeatCount=\"indefinite\"\n      />\n    </circle>\n  );\n};\n\n\nclass Timeline extends PureComponent {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: [],\n      time:''\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:8000/api/timeline')\n        .then(res => {\n          this.setState({ \n            data: res.data.data,\n            time: res.data.time,\n            isLoaded: true \n          });\n        })\n        .catch(error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        });\n  }\n\n  \n    \n    render() {\n      /**\n     * @overview: Método de lectura de los datos del método anterior y visualización. \n     * Se crea la estructura general de la gráfica o se manda le mensaje de que no puede ser desplegada. \n     * Se despliega el código de la gráfica dinamica de los tweets de las palabras claves seleccionadas.\n     * @see: http://www.miopers.unam.mx/covid/#/\n     */\n      const { data, time, error, isLoaded } = this.state;\n      if (error) {\n        return <div>Error: {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Loading...</div>;\n      } else {\n        return (\n          <div>\n            <div style={styles.updateDate} className='d-flex justify-content-center font-weight-lighter'>\n              <span>Última actualización: {time}</span>\n            </div>\n            <ResponsiveContainer width=\"100%\" height={400}>\n              <LineChart\n                data={data}\n                margin={{\n                top: 5, right: 25, left: 20, bottom: 7,\n                }}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"day\" />\n                <YAxis />\n                <Tooltip />\n                <Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} />\n                <ReferenceLine x=\"2020-05-31\" label=\"Fin de jornada de sana distancia\" stroke=\"red\" />\n                <ReferenceDot x=\"2020-07-26\" y={600} label=\"Semaforo\" shape={CustomReferenceDotOrange}/>\n                <ReferenceDot x=\"2020-04-21\" y={200} label=\"Fase 3\" stroke=\"red\"/>\n                <ReferenceDot x=\"2021-05-13\" y={200} label=\"Inicio Vacunación\" />\n                <ReferenceDot x=\"2020-06-16\" y={200} label=\"Segunda ola contagios\" stroke=\"blue\"/>\n                <ReferenceDot x=\"2020-05-07\" y={350} label=\"Segundo confinamiento\" stroke=\"red\"/>\n                <Line type=\"monotone\" dataKey=\"coronavirus\" stroke=\"#00e676\" strokeWidth='1' animationDuration={4000} />\n                <Line type=\"monotone\" dataKey=\"quedateencasa\" stroke=\"#1b5e20\" strokeWidth='1' animationDuration={3500}/>\n                <Line type=\"monotone\" dataKey=\"covid19\" stroke=\"#e65100\" strokeWidth='1' animationDuration={1500}/>\n                <Line type=\"natural\" dataKey=\"@HLGatell\" stroke=\"#f44336\" strokeWidth='1' animationDuration={3000}/>\n                <Line type=\"natural\" dataKey=\"@lopezobrador_\" stroke=\"#b71c1c\" strokeWidth='1' animationDuration={2500}/>\n                <Line type=\"natural\" dataKey=\"SusanaDistancia\" stroke=\"#ffab00\" strokeWidth='1' animationDuration={2000}/>\n                <Brush dataKey=\"day\" height={40} stroke=\"#8884d8\"  />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        );\n      }\n    }\n}\n\n\n\n\nexport default Timeline;\n"]},"metadata":{},"sourceType":"module"}